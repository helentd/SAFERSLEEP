///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Events
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditEvent recording.
    /// </summary>
    [TestModule("4ab5a6dd-252a-4cc3-bb84-39b2441915c9", ModuleType.Recording, 1)]
    public partial class EditEvent : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditEvent instance = new EditEvent();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditEvent()
        {
            EditEventGroup = "Critical Incident";
            EditEventDescription = "Cardiac arrest";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditEvent Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable EventDescription.
        /// </summary>
        [TestVariable("0b814e55-1d25-4d69-80e7-94e975692542")]
        public string EventDescription
        {
            get { return repo.EventDescription; }
            set { repo.EventDescription = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EventGroup.
        /// </summary>
        [TestVariable("3dac64ee-a22a-419f-bb49-069da512f64e")]
        public string EventGroup
        {
            get { return repo.EventGroup; }
            set { repo.EventGroup = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EditEventDescription.
        /// </summary>
        [TestVariable("d4275641-36d4-4ce7-94d7-79af0bed1392")]
        public string EditEventDescription
        {
            get { return repo.EditEventDescription; }
            set { repo.EditEventDescription = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EditEventGroup.
        /// </summary>
        [TestVariable("6cd9056c-9dd7-4d04-86fe-a52cc6592388")]
        public string EditEventGroup
        {
            get { return repo.EditEventGroup; }
            set { repo.EditEventGroup = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Events.EventListItem' at Center.", repo.FrmORMain.Events.EventListItemInfo, new RecordItemIndex(0));
            repo.FrmORMain.Events.EventListItem.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Events.EditEvent' at Center.", repo.FrmORMain.Events.EditEventInfo, new RecordItemIndex(1));
            repo.FrmORMain.Events.EditEvent.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditEvent.Group' at Center.", repo.FrmEditEvent.GroupInfo, new RecordItemIndex(2));
            repo.FrmEditEvent.Group.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EditEventGroup'.", new RecordItemIndex(3));
            Keyboard.Press(EditEventGroup);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditEvent.Description' at Center.", repo.FrmEditEvent.DescriptionInfo, new RecordItemIndex(5));
            repo.FrmEditEvent.Description.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EditEventDescription'.", new RecordItemIndex(6));
            Keyboard.Press(EditEventDescription);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditEvent.OK' at Center.", repo.FrmEditEvent.OKInfo, new RecordItemIndex(8));
            repo.FrmEditEvent.OK.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.Events.EditEventListItem'.", repo.FrmORMain.Events.EditEventListItemInfo, new RecordItemIndex(9));
            Validate.Exists(repo.FrmORMain.Events.EditEventListItemInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

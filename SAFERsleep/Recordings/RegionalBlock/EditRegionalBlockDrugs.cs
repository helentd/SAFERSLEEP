///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.RegionalBlock
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditRegionalBlockDrugs recording.
    /// </summary>
    [TestModule("2bab45d2-08d3-49ec-8e72-57d6531530f6", ModuleType.Recording, 1)]
    public partial class EditRegionalBlockDrugs : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditRegionalBlockDrugs instance = new EditRegionalBlockDrugs();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditRegionalBlockDrugs()
        {
            New_Mode = "";
            New_Dose = "";
            New_Unit = "";
            New_Comment = "";
            New_DrugProduct = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditRegionalBlockDrugs Instance
        {
            get { return instance; }
        }

#region Variables

        string _New_Mode;

        /// <summary>
        /// Gets or sets the value of variable New_Mode.
        /// </summary>
        [TestVariable("691239f5-9793-40fd-8670-3b4e86701773")]
        public string New_Mode
        {
            get { return _New_Mode; }
            set { _New_Mode = value; }
        }

        string _New_Dose;

        /// <summary>
        /// Gets or sets the value of variable New_Dose.
        /// </summary>
        [TestVariable("ff4d8db1-ee64-41dc-9622-662c1b848111")]
        public string New_Dose
        {
            get { return _New_Dose; }
            set { _New_Dose = value; }
        }

        string _New_Unit;

        /// <summary>
        /// Gets or sets the value of variable New_Unit.
        /// </summary>
        [TestVariable("ea5e1b61-718c-4126-ab04-c488ca35dcd1")]
        public string New_Unit
        {
            get { return _New_Unit; }
            set { _New_Unit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Block_Comment.
        /// </summary>
        [TestVariable("80639b45-807a-4bd2-bcff-853b8979b123")]
        public string Block_Comment
        {
            get { return repo.Block_Comment; }
            set { repo.Block_Comment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Block_DoseUnit.
        /// </summary>
        [TestVariable("38c4f1b8-bdcf-4d3f-a916-6a71157d70a3")]
        public string Block_DoseUnit
        {
            get { return repo.Block_DoseUnit; }
            set { repo.Block_DoseUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Block_DrugName.
        /// </summary>
        [TestVariable("bc89fea6-3cc8-4cf6-b05c-67fced66b722")]
        public string Block_DrugName
        {
            get { return repo.Block_DrugName; }
            set { repo.Block_DrugName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable New_Comment.
        /// </summary>
        [TestVariable("670b19c7-864e-4b5a-9c8b-d3f2f2469a00")]
        public string New_Comment
        {
            get { return repo.New_Comment; }
            set { repo.New_Comment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable New_DoseUnit.
        /// </summary>
        [TestVariable("685003c4-4a59-43ca-bca0-d1d762fbd71e")]
        public string New_DoseUnit
        {
            get { return repo.New_DoseUnit; }
            set { repo.New_DoseUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable New_DrugProduct.
        /// </summary>
        [TestVariable("df69955c-ac19-417d-970f-878218675e3a")]
        public string New_DrugProduct
        {
            get { return repo.New_DrugProduct; }
            set { repo.New_DrugProduct = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.RegionalBockDrugs.AddedBlockDrug' at Center.", repo.AddRegionalBlock.RegionalBockDrugs.AddedBlockDrugInfo, new RecordItemIndex(0));
            repo.AddRegionalBlock.RegionalBockDrugs.AddedBlockDrug.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.RegionalBockDrugs.EditDrug' at Center.", repo.AddRegionalBlock.RegionalBockDrugs.EditDrugInfo, new RecordItemIndex(1));
            repo.AddRegionalBlock.RegionalBockDrugs.EditDrug.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.FrmEditDrug.DrugProductInfo, "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$New_DrugProduct'.", new RecordItemIndex(3));
            Keyboard.Press(New_DrugProduct);
            Delay.Milliseconds(100);
            
            SelectMode(New_Mode);
            Delay.Milliseconds(0);
            
            EnterDose(New_Mode, New_Dose);
            Delay.Milliseconds(0);
            
            EnterUnit(New_Mode, New_Unit);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.FrmEditDrug.CommentInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$New_Comment'.", new RecordItemIndex(8));
            Keyboard.Press(New_Comment);
            Delay.Milliseconds(100);
            
            // Click OK button to save the drug
            Report.Log(ReportLevel.Info, "Mouse", "Click OK button to save the drug\r\nMouse Left Click item 'FrmEditDrug.OK' at Center.", repo.FrmEditDrug.OKInfo, new RecordItemIndex(9));
            repo.FrmEditDrug.OK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(10));
            Delay.Duration(2000, false);
            
            // Validate the  Drug is added succesfully
            Report.Log(ReportLevel.Info, "Validation", "Validate the  Drug is added succesfully\r\nValidating Exists on item 'AddRegionalBlock.RegionalBockDrugs.EditedBlockDrug'.", repo.AddRegionalBlock.RegionalBockDrugs.EditedBlockDrugInfo, new RecordItemIndex(11));
            Validate.Exists(repo.AddRegionalBlock.RegionalBockDrugs.EditedBlockDrugInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

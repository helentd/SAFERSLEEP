///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.RegionalBlock
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddRegional_NewMedication recording.
    /// </summary>
    [TestModule("15a43e31-a89e-490f-a5cb-1bc29cfbccbf", ModuleType.Recording, 1)]
    public partial class AddRegional_NewMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddRegional_NewMedication instance = new AddRegional_NewMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddRegional_NewMedication()
        {
            BlockName = "Epidural";
            Block_DrugName = "Bupivacaine Plain 0.25%";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddRegional_NewMedication Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable BlockName.
        /// </summary>
        [TestVariable("75a1b698-125e-4259-b9cc-d48007c0926d")]
        public string BlockName
        {
            get { return repo.BlockName; }
            set { repo.BlockName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Block_DrugName.
        /// </summary>
        [TestVariable("758b355c-835c-4adc-af88-25d6761cf5ce")]
        public string Block_DrugName
        {
            get { return repo.Block_DrugName; }
            set { repo.Block_DrugName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.RegionalBlock.AddRegional' at Center.", repo.FrmORMain.RegionalBlock.AddRegionalInfo, new RecordItemIndex(0));
            repo.FrmORMain.RegionalBlock.AddRegional.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddRegionalBlock.BlockNameInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$BlockName'.", new RecordItemIndex(2));
            Keyboard.Press(BlockName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Click on "RegionalBlockDrug" tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"RegionalBlockDrug\" tab\r\nMouse Left Click item 'AddRegionalBlock.Tabs.RegionalBlockDrugs' at Center.", repo.AddRegionalBlock.Tabs.RegionalBlockDrugsInfo, new RecordItemIndex(4));
            repo.AddRegionalBlock.Tabs.RegionalBlockDrugs.Click();
            Delay.Milliseconds(200);
            
            // Click on "Add Drug" button
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Add Drug\" button\r\nMouse Left Click item 'AddRegionalBlock.RegionalBockDrugs.AddDrug' at Center.", repo.AddRegionalBlock.RegionalBockDrugs.AddDrugInfo, new RecordItemIndex(5));
            repo.AddRegionalBlock.RegionalBockDrugs.AddDrug.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditDrug.AddNewDrug' at Center.", repo.FrmEditDrug.AddNewDrugInfo, new RecordItemIndex(6));
            repo.FrmEditDrug.AddNewDrug.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddDrug.NewDrugname' at Center.", repo.AddDrug.NewDrugnameInfo, new RecordItemIndex(7));
            repo.AddDrug.NewDrugname.Click();
            Delay.Milliseconds(200);
            
            // Enter Drug Product name
            Report.Log(ReportLevel.Info, "Keyboard", "Enter Drug Product name\r\nKey sequence from variable '$Block_DrugName'.", new RecordItemIndex(8));
            Keyboard.Press(Block_DrugName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // CLick OK on "Add New Drug"
            Report.Log(ReportLevel.Info, "Mouse", "CLick OK on \"Add New Drug\"\r\nMouse Left Click item 'AddDrug.ButtonOK' at Center.", repo.AddDrug.ButtonOKInfo, new RecordItemIndex(10));
            repo.AddDrug.ButtonOK.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

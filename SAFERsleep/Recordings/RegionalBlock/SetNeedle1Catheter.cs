///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.RegionalBlock
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetNeedle1Catheter recording.
    /// </summary>
    [TestModule("0565daa3-d0be-4ca9-956f-9227a0b166e4", ModuleType.Recording, 1)]
    public partial class SetNeedles : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static SetNeedles instance = new SetNeedles();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetNeedles()
        {
            Needle1 = "Tuohy";
            Size1 = "16";
            InsertDepth1 = "5";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetNeedles Instance
        {
            get { return instance; }
        }

#region Variables

        string _Needle1;

        /// <summary>
        /// Gets or sets the value of variable Needle1.
        /// </summary>
        [TestVariable("1a8b764d-1cfa-4088-95a8-8eda26f659b2")]
        public string Needle1
        {
            get { return _Needle1; }
            set { _Needle1 = value; }
        }

        string _Size1;

        /// <summary>
        /// Gets or sets the value of variable Size1.
        /// </summary>
        [TestVariable("ab97f4d1-5247-4a41-bd2b-4a54602ac134")]
        public string Size1
        {
            get { return _Size1; }
            set { _Size1 = value; }
        }

        string _InsertDepth1;

        /// <summary>
        /// Gets or sets the value of variable InsertDepth1.
        /// </summary>
        [TestVariable("ff9db514-63d6-4d13-9b62-4dbe1a6c99ab")]
        public string InsertDepth1
        {
            get { return _InsertDepth1; }
            set { _InsertDepth1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on Needle Tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on Needle Tab\r\nMouse Left Click item 'AddRegionalBlock.Tabs.Needle' at Center.", repo.AddRegionalBlock.Tabs.NeedleInfo, new RecordItemIndex(0));
            repo.AddRegionalBlock.Tabs.Needle.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.Needle.Needle1Name' at Center.", repo.AddRegionalBlock.Needle.Needle1NameInfo, new RecordItemIndex(1));
            repo.AddRegionalBlock.Needle.Needle1Name.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Needle1'.", new RecordItemIndex(2));
            Keyboard.Press(Needle1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.Needle.Needle1Size' at Center.", repo.AddRegionalBlock.Needle.Needle1SizeInfo, new RecordItemIndex(4));
            repo.AddRegionalBlock.Needle.Needle1Size.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Size1'.", new RecordItemIndex(5));
            Keyboard.Press(Size1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.Needle.Needle1InsertionDepth' at Center.", repo.AddRegionalBlock.Needle.Needle1InsertionDepthInfo, new RecordItemIndex(7));
            repo.AddRegionalBlock.Needle.Needle1InsertionDepth.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$InsertDepth1'.", new RecordItemIndex(8));
            Keyboard.Press(InsertDepth1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.RegionalBlock
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetRegionalBlockDrug recording.
    /// </summary>
    [TestModule("f564e69b-0c8f-4cbb-9acc-8f2da1399fd7", ModuleType.Recording, 1)]
    public partial class SetRegionalBlockDrug : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static SetRegionalBlockDrug instance = new SetRegionalBlockDrug();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetRegionalBlockDrug()
        {
            Block_DrugName = "Bupivacaine Plain 0.25%";
            Block_DrugMode = "Bolus";
            Block_Dosage = "100";
            Block_Unit = "mg";
            Block_Comment = "Bolus drug test";
            Block_DrugTime = "00:00";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetRegionalBlockDrug Instance
        {
            get { return instance; }
        }

#region Variables

        string _Block_DrugMode;

        /// <summary>
        /// Gets or sets the value of variable Block_DrugMode.
        /// </summary>
        [TestVariable("9ec27e42-c5b9-4336-8f97-7fc2423daf0c")]
        public string Block_DrugMode
        {
            get { return _Block_DrugMode; }
            set { _Block_DrugMode = value; }
        }

        string _Block_Dosage;

        /// <summary>
        /// Gets or sets the value of variable Block_Dosage.
        /// </summary>
        [TestVariable("cda3fde3-ce1f-413c-bc1f-f6699a98c6be")]
        public string Block_Dosage
        {
            get { return _Block_Dosage; }
            set { _Block_Dosage = value; }
        }

        string _Block_Unit;

        /// <summary>
        /// Gets or sets the value of variable Block_Unit.
        /// </summary>
        [TestVariable("b5ba0876-c59f-47f7-8753-3eb31fefc136")]
        public string Block_Unit
        {
            get { return _Block_Unit; }
            set { _Block_Unit = value; }
        }

        string _Block_DrugTime;

        /// <summary>
        /// Gets or sets the value of variable Block_DrugTime.
        /// </summary>
        [TestVariable("d5b7045d-0ce4-413c-af25-1f678e3ed456")]
        public string Block_DrugTime
        {
            get { return _Block_DrugTime; }
            set { _Block_DrugTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Block_DrugName.
        /// </summary>
        [TestVariable("31caea1d-17f9-416f-9439-d9942340c5ce")]
        public string Block_DrugName
        {
            get { return repo.Block_DrugName; }
            set { repo.Block_DrugName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Block_Comment.
        /// </summary>
        [TestVariable("b107de64-af96-49ea-887d-f889786ae96e")]
        public string Block_Comment
        {
            get { return repo.Block_Comment; }
            set { repo.Block_Comment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Block_DoseUnit.
        /// </summary>
        [TestVariable("38c4f1b8-bdcf-4d3f-a916-6a71157d70a3")]
        public string Block_DoseUnit
        {
            get { return repo.Block_DoseUnit; }
            set { repo.Block_DoseUnit = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on "RegionalBlockDrug" tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"RegionalBlockDrug\" tab\r\nMouse Left Click item 'AddRegionalBlock.Tabs.RegionalBlockDrugs' at Center.", repo.AddRegionalBlock.Tabs.RegionalBlockDrugsInfo, new RecordItemIndex(0));
            repo.AddRegionalBlock.Tabs.RegionalBlockDrugs.Click();
            Delay.Milliseconds(200);
            
            // Click on "Add Drug" button
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Add Drug\" button\r\nMouse Left Click item 'AddRegionalBlock.RegionalBockDrugs.AddDrug' at Center.", repo.AddRegionalBlock.RegionalBockDrugs.AddDrugInfo, new RecordItemIndex(1));
            repo.AddRegionalBlock.RegionalBockDrugs.AddDrug.Click();
            Delay.Milliseconds(200);
            
            // CLick on Drug Product drop down list
            Report.Log(ReportLevel.Info, "Mouse", "CLick on Drug Product drop down list\r\nMouse Left Click item 'FrmEditDrug.DrugProduct' at Center.", repo.FrmEditDrug.DrugProductInfo, new RecordItemIndex(2));
            repo.FrmEditDrug.DrugProduct.Click();
            Delay.Milliseconds(200);
            
            // Enter Drug Product name
            Report.Log(ReportLevel.Info, "Keyboard", "Enter Drug Product name\r\nKey sequence from variable '$Block_DrugName'.", new RecordItemIndex(3));
            Keyboard.Press(Block_DrugName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Select Mode (Bolus/Infusion)
            SelectMode(Block_DrugMode);
            Delay.Milliseconds(0);
            
            // Enter dose
            EnterDose(Block_DrugMode, Block_Dosage);
            Delay.Milliseconds(0);
            
            // Enter Unit based on the selected Mode
            EnterUnit(Block_DrugMode, Block_Unit);
            Delay.Milliseconds(0);
            
            // Enter Comment
            Report.Log(ReportLevel.Info, "Mouse", "Enter Comment\r\nMouse Left Click item 'FrmEditDrug.Comment' at Center.", repo.FrmEditDrug.CommentInfo, new RecordItemIndex(8));
            repo.FrmEditDrug.Comment.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Block_Comment'.", new RecordItemIndex(9));
            Keyboard.Press(Block_Comment);
            Delay.Milliseconds(100);
            
            // Click OK button to save the drug
            Report.Log(ReportLevel.Info, "Mouse", "Click OK button to save the drug\r\nMouse Left Click item 'FrmEditDrug.OK' at Center.", repo.FrmEditDrug.OKInfo, new RecordItemIndex(10));
            repo.FrmEditDrug.OK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            // Save the time to variable to use for validation
            Report.Log(ReportLevel.Info, "Get Value", "Save the time to variable to use for validation\r\nGetting attribute 'Text' from item 'AddRegionalBlock.RegionalBockDrugs.AddedDrugTime' and assigning its value to variable 'Block_DrugTime'.", repo.AddRegionalBlock.RegionalBockDrugs.AddedDrugTimeInfo, new RecordItemIndex(12));
            Block_DrugTime = repo.AddRegionalBlock.RegionalBockDrugs.AddedDrugTime.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            // Validate the  Drug is added succesfully
            Report.Log(ReportLevel.Info, "Validation", "Validate the  Drug is added succesfully\r\nValidating Exists on item 'AddRegionalBlock.RegionalBockDrugs.AddedBlockDrug'.", repo.AddRegionalBlock.RegionalBockDrugs.AddedBlockDrugInfo, new RecordItemIndex(13));
            Validate.Exists(repo.AddRegionalBlock.RegionalBockDrugs.AddedBlockDrugInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

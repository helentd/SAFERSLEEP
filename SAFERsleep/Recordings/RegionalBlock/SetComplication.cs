///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.RegionalBlock
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetComplication recording.
    /// </summary>
    [TestModule("2dce6308-ad17-49db-8688-6b70cd8d0d7f", ModuleType.Recording, 1)]
    public partial class SetComplication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static SetComplication instance = new SetComplication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetComplication()
        {
            Compli_Comment = "This is complication comment";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetComplication Instance
        {
            get { return instance; }
        }

#region Variables

        string _Compli_Comment;

        /// <summary>
        /// Gets or sets the value of variable Compli_Comment.
        /// </summary>
        [TestVariable("f6ed5eee-eebc-4220-868a-08448701cea6")]
        public string Compli_Comment
        {
            get { return _Compli_Comment; }
            set { _Compli_Comment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Complication.
        /// </summary>
        [TestVariable("0ceaa36f-fafa-4ca7-bdee-7323c666f6af")]
        public string Complication
        {
            get { return repo.Complication; }
            set { repo.Complication = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // CLick on "Complicaiton " tab
            Report.Log(ReportLevel.Info, "Mouse", "CLick on \"Complicaiton \" tab\r\nMouse Left Click item 'AddRegionalBlock.Tabs.Complications' at Center.", repo.AddRegionalBlock.Tabs.ComplicationsInfo, new RecordItemIndex(0));
            repo.AddRegionalBlock.Tabs.Complications.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.Complication.ComplicationName' at Center.", repo.AddRegionalBlock.Complication.ComplicationNameInfo, new RecordItemIndex(1));
            repo.AddRegionalBlock.Complication.ComplicationName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.Complication.Compli_Comment' at Center.", repo.AddRegionalBlock.Complication.Compli_CommentInfo, new RecordItemIndex(2));
            repo.AddRegionalBlock.Complication.Compli_Comment.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Compli_Comment'.", new RecordItemIndex(3));
            Keyboard.Press(Compli_Comment);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

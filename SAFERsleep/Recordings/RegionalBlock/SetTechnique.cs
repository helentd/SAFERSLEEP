///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.RegionalBlock
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetTechnique recording.
    /// </summary>
    [TestModule("96d85e70-4fce-4c6a-bc5b-895699077d44", ModuleType.Recording, 1)]
    public partial class SetTechnique : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static SetTechnique instance = new SetTechnique();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetTechnique()
        {
            NumberOfAttemp = "1";
            Tech_Comment = "This is a Technique comment";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetTechnique Instance
        {
            get { return instance; }
        }

#region Variables

        string _NumberOfAttemp;

        /// <summary>
        /// Gets or sets the value of variable NumberOfAttemp.
        /// </summary>
        [TestVariable("1ecb4e5a-398b-4e28-a237-76809fb9b8e1")]
        public string NumberOfAttemp
        {
            get { return _NumberOfAttemp; }
            set { _NumberOfAttemp = value; }
        }

        string _Tech_Comment;

        /// <summary>
        /// Gets or sets the value of variable Tech_Comment.
        /// </summary>
        [TestVariable("1c98bafc-5bc5-484a-9732-b047565af563")]
        public string Tech_Comment
        {
            get { return _Tech_Comment; }
            set { _Tech_Comment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Technique.
        /// </summary>
        [TestVariable("870ba5d1-d897-4f56-8060-9a72b391098d")]
        public string Technique
        {
            get { return repo.Technique; }
            set { repo.Technique = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // CLick on "Technique" tab
            Report.Log(ReportLevel.Info, "Mouse", "CLick on \"Technique\" tab\r\nMouse Left Click item 'AddRegionalBlock.Tabs.Technique' at Center.", repo.AddRegionalBlock.Tabs.TechniqueInfo, new RecordItemIndex(0));
            repo.AddRegionalBlock.Tabs.Technique.Click();
            Delay.Milliseconds(200);
            
            // Select Techinque by the name
            Report.Log(ReportLevel.Info, "Mouse", "Select Techinque by the name\r\nMouse Left Click item 'AddRegionalBlock.Technique.Technique_Name' at Center.", repo.AddRegionalBlock.Technique.Technique_NameInfo, new RecordItemIndex(1));
            repo.AddRegionalBlock.Technique.Technique_Name.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.Technique.NumberOfAttempts' at Center.", repo.AddRegionalBlock.Technique.NumberOfAttemptsInfo, new RecordItemIndex(2));
            repo.AddRegionalBlock.Technique.NumberOfAttempts.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumberOfAttemp'.", new RecordItemIndex(3));
            Keyboard.Press(NumberOfAttemp);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddRegionalBlock.Technique.Technique_Comment' at Center.", repo.AddRegionalBlock.Technique.Technique_CommentInfo, new RecordItemIndex(5));
            repo.AddRegionalBlock.Technique.Technique_Comment.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Tech_Comment'.", new RecordItemIndex(6));
            Keyboard.Press(Tech_Comment);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

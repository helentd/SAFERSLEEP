///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Templates.ApplyingTemplate
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Ward_Apply_Template recording.
    /// </summary>
    [TestModule("48a720cc-8683-4a8d-b7fa-4ef2e7ac340c", ModuleType.Recording, 1)]
    public partial class Ward_Apply_Template : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static Ward_Apply_Template instance = new Ward_Apply_Template();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Ward_Apply_Template()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Ward_Apply_Template Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable TemplateName.
        /// </summary>
        [TestVariable("1e4aca5b-2112-4f79-a4bf-9ef97efb938f")]
        public string TemplateName
        {
            get { return repo.TemplateName; }
            set { repo.TemplateName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ward_Inst.
        /// </summary>
        [TestVariable("4f396f38-238f-40be-b745-6841757aac18")]
        public string Ward_Inst
        {
            get { return repo.Ward_Inst; }
            set { repo.Ward_Inst = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ward_Freq.
        /// </summary>
        [TestVariable("c9fa3f20-d70e-4c19-a68a-c7e0c8ba36ba")]
        public string Ward_Freq
        {
            get { return repo.Ward_Freq; }
            set { repo.Ward_Freq = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ward_Route.
        /// </summary>
        [TestVariable("28ff13d8-749c-4ed4-bd15-1cdc67573047")]
        public string Ward_Route
        {
            get { return repo.Ward_Route; }
            set { repo.Ward_Route = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ward_Unit.
        /// </summary>
        [TestVariable("40f6a05c-518d-475e-bc42-f6c0becf6067")]
        public string Ward_Unit
        {
            get { return repo.Ward_Unit; }
            set { repo.Ward_Unit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ward_Dose.
        /// </summary>
        [TestVariable("5df43d60-4212-48f1-b7fc-0b057e6d23e3")]
        public string Ward_Dose
        {
            get { return repo.Ward_Dose; }
            set { repo.Ward_Dose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ward_Med.
        /// </summary>
        [TestVariable("cf1c6b42-05a1-45e0-94fa-adc1eaea1a6b")]
        public string Ward_Med
        {
            get { return repo.Ward_Med; }
            set { repo.Ward_Med = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostInstruction.
        /// </summary>
        [TestVariable("898e6917-c069-471d-826f-f4fdff87d381")]
        public string PostInstruction
        {
            get { return repo.PostInstruction; }
            set { repo.PostInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpFreqTime.
        /// </summary>
        [TestVariable("361489ef-4ffd-415e-8aa7-2e0740050849")]
        public string PostOpFreqTime
        {
            get { return repo.PostOpFreqTime; }
            set { repo.PostOpFreqTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpRoute.
        /// </summary>
        [TestVariable("d80dc34f-7650-4f28-8796-191e7182d876")]
        public string PostOpRoute
        {
            get { return repo.PostOpRoute; }
            set { repo.PostOpRoute = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpUnit.
        /// </summary>
        [TestVariable("acf1e5c4-3a93-40f0-a352-2a27b79298d3")]
        public string PostOpUnit
        {
            get { return repo.PostOpUnit; }
            set { repo.PostOpUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpDose.
        /// </summary>
        [TestVariable("b681d054-a4dc-4938-963e-b9522fa0357d")]
        public string PostOpDose
        {
            get { return repo.PostOpDose; }
            set { repo.PostOpDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpDrug.
        /// </summary>
        [TestVariable("e9344f95-32d2-46ac-80d9-403c6fb9e229")]
        public string PostOpDrug
        {
            get { return repo.PostOpDrug; }
            set { repo.PostOpDrug = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on "Ward Medication" tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Ward Medication\" tab\r\nMouse Left Click item 'FrmORMain.PostOpInstructions.WardMedication' at Center.", repo.FrmORMain.PostOpInstructions.WardMedicationInfo, new RecordItemIndex(0));
            repo.FrmORMain.PostOpInstructions.WardMedication.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Templates' at Center.", repo.FrmORMain.TemplatesInfo, new RecordItemIndex(1));
            repo.FrmORMain.Templates.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.TemplateListItem' at Center.", repo.Templates.TemplatesForm.TemplateListItemInfo, new RecordItemIndex(2));
            repo.Templates.TemplatesForm.TemplateListItem.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.ViewTemplate' at Center.", repo.Templates.TemplatesForm.ViewTemplateInfo, new RecordItemIndex(3));
            repo.Templates.TemplatesForm.ViewTemplate.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TemplateAdministration.WardMedListItem'.", repo.TemplateAdministration.WardMedListItemInfo, new RecordItemIndex(4));
            Validate.Exists(repo.TemplateAdministration.WardMedListItemInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TemplateAdministration.ButtonClose' at Center.", repo.TemplateAdministration.ButtonCloseInfo, new RecordItemIndex(5));
            repo.TemplateAdministration.ButtonClose.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.ApplyToCurrentScreen' at Center.", repo.Templates.TemplatesForm.ApplyToCurrentScreenInfo, new RecordItemIndex(6));
            repo.Templates.TemplatesForm.ApplyToCurrentScreen.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.PostOpInstructions.Ward.WardListItem'.", repo.FrmORMain.PostOpInstructions.Ward.WardListItemInfo, new RecordItemIndex(7));
            Validate.Exists(repo.FrmORMain.PostOpInstructions.Ward.WardListItemInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

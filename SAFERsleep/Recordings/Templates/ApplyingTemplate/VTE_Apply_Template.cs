///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Templates.ApplyingTemplate
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The VTE_Apply_Template recording.
    /// </summary>
    [TestModule("e3ec7f3e-cf21-4612-b84b-115435c32b80", ModuleType.Recording, 1)]
    public partial class VTE_Apply_Template : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static VTE_Apply_Template instance = new VTE_Apply_Template();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public VTE_Apply_Template()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static VTE_Apply_Template Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Instruction.
        /// </summary>
        [TestVariable("714eef5b-7d44-4a1d-bfe9-6fecd1f6a7e9")]
        public string Instruction
        {
            get { return repo.Instruction; }
            set { repo.Instruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Medication.
        /// </summary>
        [TestVariable("4e354dd5-351b-48bc-8b77-d04432033491")]
        public string Medication
        {
            get { return repo.Medication; }
            set { repo.Medication = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TemplateName.
        /// </summary>
        [TestVariable("1e4aca5b-2112-4f79-a4bf-9ef97efb938f")]
        public string TemplateName
        {
            get { return repo.TemplateName; }
            set { repo.TemplateName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable VTEMedInst.
        /// </summary>
        [TestVariable("db87b414-c6ca-4f73-8748-8daf3ddc4749")]
        public string VTEMedInst
        {
            get { return repo.VTEMedInst; }
            set { repo.VTEMedInst = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable VTEMedFreq.
        /// </summary>
        [TestVariable("0f4d846a-8a3d-4b3c-bdc0-4089ab65bbca")]
        public string VTEMedFreq
        {
            get { return repo.VTEMedFreq; }
            set { repo.VTEMedFreq = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable VTEMedRoute.
        /// </summary>
        [TestVariable("b43d16fe-a149-4825-9158-48ee8b53ae1d")]
        public string VTEMedRoute
        {
            get { return repo.VTEMedRoute; }
            set { repo.VTEMedRoute = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable VTEMedUnit.
        /// </summary>
        [TestVariable("224f0085-d788-43f3-80aa-7209a46caab3")]
        public string VTEMedUnit
        {
            get { return repo.VTEMedUnit; }
            set { repo.VTEMedUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable VTEMedDose.
        /// </summary>
        [TestVariable("41721237-ed51-493b-9ad0-1d4200acbda1")]
        public string VTEMedDose
        {
            get { return repo.VTEMedDose; }
            set { repo.VTEMedDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable VTEMedName.
        /// </summary>
        [TestVariable("1c6d51d7-1e38-4209-8d93-50160582441c")]
        public string VTEMedName
        {
            get { return repo.VTEMedName; }
            set { repo.VTEMedName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Templates' at Center.", repo.FrmORMain.TemplatesInfo, new RecordItemIndex(0));
            repo.FrmORMain.Templates.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.TemplateListItem' at Center.", repo.Templates.TemplatesForm.TemplateListItemInfo, new RecordItemIndex(1));
            repo.Templates.TemplatesForm.TemplateListItem.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.ViewTemplate' at Center.", repo.Templates.TemplatesForm.ViewTemplateInfo, new RecordItemIndex(2));
            repo.Templates.TemplatesForm.ViewTemplate.Click();
            Delay.Milliseconds(200);
            
            GetTemplateValues();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TemplateAdministration.VTEMedListItem'.", repo.TemplateAdministration.VTEMedListItemInfo, new RecordItemIndex(4));
            Validate.Exists(repo.TemplateAdministration.VTEMedListItemInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TemplateAdministration.ButtonClose' at Center.", repo.TemplateAdministration.ButtonCloseInfo, new RecordItemIndex(5));
            repo.TemplateAdministration.ButtonClose.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.ApplyToCurrentScreen' at Center.", repo.Templates.TemplatesForm.ApplyToCurrentScreenInfo, new RecordItemIndex(6));
            repo.Templates.TemplatesForm.ApplyToCurrentScreen.Click();
            Delay.Milliseconds(200);
            
            ValidateTemplateApplied();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

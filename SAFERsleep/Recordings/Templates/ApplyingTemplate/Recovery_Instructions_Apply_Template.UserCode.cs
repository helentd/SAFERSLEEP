///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SAFERsleep.Recordings.Templates.ApplyingTemplate
{
    public partial class Recovery_Instructions_Apply_Template
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        private string Rate;
        private string Mask;
        private string Comment;
        private string Instructions;
        
        public void GetTemplatesValues()
        {
        	Ranorex.Report.Info("Getting the values of Rate, Mask, Comment, and Instructions");
        	Rate = repo.TemplateAdministration.PACU.PACUOxygenRate.TextValue;
        	Mask = repo.TemplateAdministration.PACU.PACUOxygenMask.TextValue;
        	Comment = repo.TemplateAdministration.PACU.PACUOxygenComment.TextValue;
        	Instructions = repo.TemplateAdministration.PACU.PACUOtherInstructions.TextValue;
        	Delay.Milliseconds(200);
        }
        
        public void ValidateAppliedTemplate()
        {
        	Ranorex.Report.Info("Checking values applied from the Template");
        	Validate.AreEqual(repo.FrmORMain.PACUInstructions.OxygenRate.Text, Rate);
        	Delay.Milliseconds(200);
        	Validate.AreEqual(repo.FrmORMain.PACUInstructions.OxygenMask.Text, Mask);
        	Delay.Milliseconds(200);
        	Validate.AreEqual(repo.FrmORMain.PACUInstructions.OxygenInstruction.Text, Comment);
        	Delay.Milliseconds(200);
        	Validate.AreEqual(repo.FrmORMain.PACUInstructions.OtherInstruction.TextValue, Instructions);
        	Delay.Milliseconds(200);
        	Validate.Exists(repo.FrmORMain.PACUInstructions.AddedPACUMedication);
        	Delay.Milliseconds(200);
        }
    }
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Templates
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Pain_Pres_CoAnalgesia_Save_Template recording.
    /// </summary>
    [TestModule("f297d840-3afb-406d-9c29-480dbc7e0089", ModuleType.Recording, 1)]
    public partial class Pain_Pres_CoAnalgesia_Save_Template : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static Pain_Pres_CoAnalgesia_Save_Template instance = new Pain_Pres_CoAnalgesia_Save_Template();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Pain_Pres_CoAnalgesia_Save_Template()
        {
            TemplateName = "Auto Co-Analgesia Pain Prescription";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Pain_Pres_CoAnalgesia_Save_Template Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable CoAnalgesiaUnit.
        /// </summary>
        [TestVariable("cc4feda7-6573-47ac-b8ef-fc37d657194a")]
        public string CoAnalgesiaUnit
        {
            get { return repo.CoAnalgesiaUnit; }
            set { repo.CoAnalgesiaUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CoAnalgesiaLoadingDose.
        /// </summary>
        [TestVariable("6f9263f2-9b87-4c05-b90c-b8790351f87c")]
        public string CoAnalgesiaLoadingDose
        {
            get { return repo.CoAnalgesiaLoadingDose; }
            set { repo.CoAnalgesiaLoadingDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CoAnalgesiaMode.
        /// </summary>
        [TestVariable("7770e497-2f00-4926-b0be-f240f1779d49")]
        public string CoAnalgesiaMode
        {
            get { return repo.CoAnalgesiaMode; }
            set { repo.CoAnalgesiaMode = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CoAnalgesia_Medication.
        /// </summary>
        [TestVariable("71570fb6-77d1-4e37-b485-1f70d5c0b6da")]
        public string CoAnalgesia_Medication
        {
            get { return repo.CoAnalgesia_Medication; }
            set { repo.CoAnalgesia_Medication = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TemplateName.
        /// </summary>
        [TestVariable("3356e88a-7232-4b26-a1e6-9e89cfb52b38")]
        public string TemplateName
        {
            get { return repo.TemplateName; }
            set { repo.TemplateName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Templates' at Center.", repo.FrmORMain.TemplatesInfo, new RecordItemIndex(0));
            repo.FrmORMain.Templates.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.SaveCurrentScreenAsTemplate' at Center.", repo.Templates.TemplatesForm.SaveCurrentScreenAsTemplateInfo, new RecordItemIndex(1));
            repo.Templates.TemplatesForm.SaveCurrentScreenAsTemplate.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveTemplate.TemplateName' at Center.", repo.SaveTemplate.TemplateNameInfo, new RecordItemIndex(3));
            repo.SaveTemplate.TemplateName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TemplateName'.", new RecordItemIndex(4));
            Keyboard.Press(TemplateName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveTemplate.ButtonOK' at Center.", repo.SaveTemplate.ButtonOKInfo, new RecordItemIndex(6));
            repo.SaveTemplate.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.TemplateListItem' at Center.", repo.Templates.TemplatesForm.TemplateListItemInfo, new RecordItemIndex(7));
            repo.Templates.TemplatesForm.TemplateListItem.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.ViewTemplate' at Center.", repo.Templates.TemplatesForm.ViewTemplateInfo, new RecordItemIndex(8));
            repo.Templates.TemplatesForm.ViewTemplate.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TemplateAdministration.CoAnalgesia.CoAnalgesiaTab' at Center.", repo.TemplateAdministration.CoAnalgesia.CoAnalgesiaTabInfo, new RecordItemIndex(9));
            repo.TemplateAdministration.CoAnalgesia.CoAnalgesiaTab.Click();
            Delay.Milliseconds(200);
            
            ValidateCoAnalgesiaMedication();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TemplateAdministration.ButtonClose' at Center.", repo.TemplateAdministration.ButtonCloseInfo, new RecordItemIndex(11));
            repo.TemplateAdministration.ButtonClose.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Templates.TemplatesForm.Close' at Center.", repo.Templates.TemplatesForm.CloseInfo, new RecordItemIndex(12));
            repo.Templates.TemplatesForm.Close.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

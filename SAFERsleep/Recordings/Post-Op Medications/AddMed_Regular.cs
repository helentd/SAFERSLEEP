///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Post_Op_Medications
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddMed_Regular recording.
    /// </summary>
    [TestModule("45641648-e715-4689-bb73-277991fb93f5", ModuleType.Recording, 1)]
    public partial class AddMed_Regular : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddMed_Regular instance = new AddMed_Regular();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddMed_Regular()
        {
            Reglar_DrugName = "Celecoxib";
            Reglar_Dose = "30";
            Reglar_DoseRange = "20-30";
            Reglar_Unit = "mmol";
            Reglar_Route = "Eyes";
            Reglar_FreTime = "6 hrly";
            Reglar_Calculation = "60";
            Reglar_Instruction = "PACU only";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddMed_Regular Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Reglar_Instruction.
        /// </summary>
        [TestVariable("2e149ce6-c062-41fa-bcf5-a67f3df880c1")]
        public string Reglar_Instruction
        {
            get { return repo.Reglar_Instruction; }
            set { repo.Reglar_Instruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Reglar_Calculation.
        /// </summary>
        [TestVariable("7569df54-ffbc-4a40-8dd3-0c5f5b2f2c0d")]
        public string Reglar_Calculation
        {
            get { return repo.Reglar_Calculation; }
            set { repo.Reglar_Calculation = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Reglar_FreTime.
        /// </summary>
        [TestVariable("66198987-b921-47c8-8fe7-5e850a66d799")]
        public string Reglar_FreTime
        {
            get { return repo.Reglar_FreTime; }
            set { repo.Reglar_FreTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Reglar_Route.
        /// </summary>
        [TestVariable("d4ba29c6-ffd2-4c33-b58e-1f1fe1b10292")]
        public string Reglar_Route
        {
            get { return repo.Reglar_Route; }
            set { repo.Reglar_Route = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Reglar_Unit.
        /// </summary>
        [TestVariable("b041fac8-d5f3-411f-8d67-40c72cabf6e9")]
        public string Reglar_Unit
        {
            get { return repo.Reglar_Unit; }
            set { repo.Reglar_Unit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Reglar_DoseRange.
        /// </summary>
        [TestVariable("e085acac-0d7f-45c1-9261-34f9f04821c6")]
        public string Reglar_DoseRange
        {
            get { return repo.Reglar_DoseRange; }
            set { repo.Reglar_DoseRange = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Reglar_Dose.
        /// </summary>
        [TestVariable("76a193ed-1b4c-437e-85f8-53e1c3d53200")]
        public string Reglar_Dose
        {
            get { return repo.Reglar_Dose; }
            set { repo.Reglar_Dose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Reglar_DrugName.
        /// </summary>
        [TestVariable("83dabc3c-1846-4ecd-a61a-446954f6e39d")]
        public string Reglar_DrugName
        {
            get { return repo.Reglar_DrugName; }
            set { repo.Reglar_DrugName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Click on "Regular" tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Regular\" tab\r\nMouse Left Click item 'FrmORMain.PostOpMedication.Tabs.RegularMedication' at Center.", repo.FrmORMain.PostOpMedication.Tabs.RegularMedicationInfo, new RecordItemIndex(0));
            repo.FrmORMain.PostOpMedication.Tabs.RegularMedication.Click();
            
            // Click on "Add" Button
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Add\" Button\r\nMouse Left Click item 'FrmORMain.PostOpMedication.RegularMed.Add' at Center.", repo.FrmORMain.PostOpMedication.RegularMed.AddInfo, new RecordItemIndex(1));
            repo.FrmORMain.PostOpMedication.RegularMed.Add.Click();
            
            // Verify the right window is opened
            Report.Log(ReportLevel.Info, "Validation", "Verify the right window is opened\r\nValidating Exists on item 'AddRegularMedication.AddRegularMedication'.", repo.AddRegularMedication.AddRegularMedicationInfo, new RecordItemIndex(2));
            Validate.Exists(repo.AddRegularMedication.AddRegularMedicationInfo);
            
            // Enter Drug name
            Report.Log(ReportLevel.Info, "Mouse", "Enter Drug name\r\nMouse Left Click item 'AddRegularMedication.DrugName' at Center.", repo.AddRegularMedication.DrugNameInfo, new RecordItemIndex(3));
            repo.AddRegularMedication.DrugName.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Reglar_DrugName'.", new RecordItemIndex(4));
            Keyboard.Press(Reglar_DrugName);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Enter Dose
            Report.Log(ReportLevel.Info, "Mouse", "Enter Dose\r\nMouse Left Click item 'AddRegularMedication.Dose' at Center.", repo.AddRegularMedication.DoseInfo, new RecordItemIndex(6));
            repo.AddRegularMedication.Dose.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Reglar_Dose'.", new RecordItemIndex(7));
            Keyboard.Press(Reglar_Dose);
            
            // Enter Dose Range
            Report.Log(ReportLevel.Info, "Mouse", "Enter Dose Range\r\nMouse Left Click item 'AddRegularMedication.DoseRange' at Center.", repo.AddRegularMedication.DoseRangeInfo, new RecordItemIndex(8));
            repo.AddRegularMedication.DoseRange.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Reglar_DoseRange'.", new RecordItemIndex(9));
            Keyboard.Press(Reglar_DoseRange);
            
            // Enter Unit
            Report.Log(ReportLevel.Info, "Mouse", "Enter Unit\r\nMouse Left Click item 'AddRegularMedication.Unit' at Center.", repo.AddRegularMedication.UnitInfo, new RecordItemIndex(10));
            repo.AddRegularMedication.Unit.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Reglar_Unit'.", new RecordItemIndex(11));
            Keyboard.Press(Reglar_Unit);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(12));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Enter Route
            Report.Log(ReportLevel.Info, "Mouse", "Enter Route\r\nMouse Left Click item 'AddRegularMedication.Route' at Center.", repo.AddRegularMedication.RouteInfo, new RecordItemIndex(13));
            repo.AddRegularMedication.Route.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Reglar_Route'.", new RecordItemIndex(14));
            Keyboard.Press(Reglar_Route);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(15));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Enter Frequency Time
            Report.Log(ReportLevel.Info, "Mouse", "Enter Frequency Time\r\nMouse Left Click item 'AddRegularMedication.FreqTime' at Center.", repo.AddRegularMedication.FreqTimeInfo, new RecordItemIndex(16));
            repo.AddRegularMedication.FreqTime.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Reglar_FreTime'.", new RecordItemIndex(17));
            Keyboard.Press(Reglar_FreTime);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Enter Dose Calculation
            Report.Log(ReportLevel.Info, "Mouse", "Enter Dose Calculation\r\nMouse Left Click item 'AddRegularMedication.DoseCalculation' at Center.", repo.AddRegularMedication.DoseCalculationInfo, new RecordItemIndex(19));
            repo.AddRegularMedication.DoseCalculation.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Reglar_Calculation'.", new RecordItemIndex(20));
            Keyboard.Press(Reglar_Calculation);
            
            // Enter Instruction
            Report.Log(ReportLevel.Info, "Mouse", "Enter Instruction\r\nMouse Left Click item 'AddRegularMedication.Instruction' at Center.", repo.AddRegularMedication.InstructionInfo, new RecordItemIndex(21));
            repo.AddRegularMedication.Instruction.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Reglar_Instruction'.", new RecordItemIndex(22));
            Keyboard.Press(Reglar_Instruction);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(23));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // CLick OK
            Report.Log(ReportLevel.Info, "Mouse", "CLick OK\r\nMouse Left Click item 'AddRegularMedication.ButtonOK' at Center.", repo.AddRegularMedication.ButtonOKInfo, new RecordItemIndex(24));
            repo.AddRegularMedication.ButtonOK.Click();
            
            // Verify that the medication is added successfully
            Report.Log(ReportLevel.Info, "Validation", "Verify that the medication is added successfully\r\nValidating Exists on item 'FrmORMain.PostOpMedication.RegularMed.AddedRegularMedication'.", repo.FrmORMain.PostOpMedication.RegularMed.AddedRegularMedicationInfo, new RecordItemIndex(25));
            Validate.Exists(repo.FrmORMain.PostOpMedication.RegularMed.AddedRegularMedicationInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

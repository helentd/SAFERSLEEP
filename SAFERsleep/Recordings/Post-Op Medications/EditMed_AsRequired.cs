///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Post_Op_Medications
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditMed_AsRequired recording.
    /// </summary>
    [TestModule("b0930f1b-a9f5-4c91-8972-724c46565992", ModuleType.Recording, 1)]
    public partial class EditMed_AsRequired : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditMed_AsRequired instance = new EditMed_AsRequired();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditMed_AsRequired()
        {
            AsRe_DoseRange = "10-20";
            Edit_AsRe_DoseRange = "";
            FreqTime = "";
            Edit_FreqTime = "";
            AsRe_DoseCalculation = "20mg/kg";
            Edit_AsRe_DoseCalculation = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditMed_AsRequired Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable AsRequ_Instruction.
        /// </summary>
        [TestVariable("44d7c078-f4fb-4b7e-8409-5889077f2139")]
        public string AsRequ_Instruction
        {
            get { return repo.AsRequ_Instruction; }
            set { repo.AsRequ_Instruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Indication.
        /// </summary>
        [TestVariable("ec17b3cf-b87d-40c8-bb98-48f0ff461351")]
        public string Indication
        {
            get { return repo.Indication; }
            set { repo.Indication = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable MaxDose.
        /// </summary>
        [TestVariable("4974ac30-2b9f-4caa-b93d-c4d98db28733")]
        public string MaxDose
        {
            get { return repo.MaxDose; }
            set { repo.MaxDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AsRe_DoseCalculation.
        /// </summary>
        [TestVariable("621ebd58-422d-45fd-8e1b-0aa7313598d7")]
        public string AsRe_DoseCalculation
        {
            get { return repo.AsRe_DoseCalculation; }
            set { repo.AsRe_DoseCalculation = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FreqTime.
        /// </summary>
        [TestVariable("c29153dc-6099-4b0c-b359-794124876d4f")]
        public string FreqTime
        {
            get { return repo.FreqTime; }
            set { repo.FreqTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AsRe_Route.
        /// </summary>
        [TestVariable("977cc819-44cf-4be8-b009-fb27c0662eac")]
        public string AsRe_Route
        {
            get { return repo.AsRe_Route; }
            set { repo.AsRe_Route = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AsRe_Unit.
        /// </summary>
        [TestVariable("74751696-b26a-44a0-bb32-75dc873f5313")]
        public string AsRe_Unit
        {
            get { return repo.AsRe_Unit; }
            set { repo.AsRe_Unit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AsRe_DoseRange.
        /// </summary>
        [TestVariable("41edefb9-544c-4881-a323-777e3fb6db72")]
        public string AsRe_DoseRange
        {
            get { return repo.AsRe_DoseRange; }
            set { repo.AsRe_DoseRange = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AsRe_Dose.
        /// </summary>
        [TestVariable("88a235ca-21ab-4cc7-ac4a-9af60c352634")]
        public string AsRe_Dose
        {
            get { return repo.AsRe_Dose; }
            set { repo.AsRe_Dose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AsRe_DrugName.
        /// </summary>
        [TestVariable("89c4ee0c-3009-4625-a434-3cfbbbc9422a")]
        public string AsRe_DrugName
        {
            get { return repo.AsRe_DrugName; }
            set { repo.AsRe_DrugName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_AsRequ_Instruction.
        /// </summary>
        [TestVariable("91b00d19-9d9b-482b-a665-e7690e05d0d9")]
        public string Edit_AsRequ_Instruction
        {
            get { return repo.Edit_AsRequ_Instruction; }
            set { repo.Edit_AsRequ_Instruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_Indication.
        /// </summary>
        [TestVariable("6af0b2ff-b687-4655-b403-847a5325c6f0")]
        public string Edit_Indication
        {
            get { return repo.Edit_Indication; }
            set { repo.Edit_Indication = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_MaxDose.
        /// </summary>
        [TestVariable("2e970c28-dd56-41a6-a31f-09f4ed83c08b")]
        public string Edit_MaxDose
        {
            get { return repo.Edit_MaxDose; }
            set { repo.Edit_MaxDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_AsRe_DoseCalculation.
        /// </summary>
        [TestVariable("d949c575-993e-41a3-9417-944b36389083")]
        public string Edit_AsRe_DoseCalculation
        {
            get { return repo.Edit_AsRe_DoseCalculation; }
            set { repo.Edit_AsRe_DoseCalculation = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_FreqTime.
        /// </summary>
        [TestVariable("f8f82e01-c6da-42f1-80b0-2b76a8175cd5")]
        public string Edit_FreqTime
        {
            get { return repo.Edit_FreqTime; }
            set { repo.Edit_FreqTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_AsRe_Route.
        /// </summary>
        [TestVariable("1bb40d44-f596-4d6c-858c-27243090cb1a")]
        public string Edit_AsRe_Route
        {
            get { return repo.Edit_AsRe_Route; }
            set { repo.Edit_AsRe_Route = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_AsRe_Unit.
        /// </summary>
        [TestVariable("2ca5c260-16d7-4b75-9521-5d64e4a10abb")]
        public string Edit_AsRe_Unit
        {
            get { return repo.Edit_AsRe_Unit; }
            set { repo.Edit_AsRe_Unit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_AsRe_DoseRange.
        /// </summary>
        [TestVariable("7ad1d8d7-1700-4217-aac6-4614d0a79467")]
        public string Edit_AsRe_DoseRange
        {
            get { return repo.Edit_AsRe_DoseRange; }
            set { repo.Edit_AsRe_DoseRange = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_AsRe_Dose.
        /// </summary>
        [TestVariable("23162b97-828f-4f53-bded-bdbef7120ecb")]
        public string Edit_AsRe_Dose
        {
            get { return repo.Edit_AsRe_Dose; }
            set { repo.Edit_AsRe_Dose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_AsRe_DrugName.
        /// </summary>
        [TestVariable("a3b99160-6358-4745-9c32-3ef2aafd24c7")]
        public string Edit_AsRe_DrugName
        {
            get { return repo.Edit_AsRe_DrugName; }
            set { repo.Edit_AsRe_DrugName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on "As Required" tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"As Required\" tab\r\nMouse Left Click item 'FrmORMain.PostOpMedication.Tabs.AsRequiredPRN' at Center.", repo.FrmORMain.PostOpMedication.Tabs.AsRequiredPRNInfo, new RecordItemIndex(0));
            repo.FrmORMain.PostOpMedication.Tabs.AsRequiredPRN.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpMedication.AsReMed.AddedAsRequiredMedication' at Center.", repo.FrmORMain.PostOpMedication.AsReMed.AddedAsRequiredMedicationInfo, new RecordItemIndex(1));
            repo.FrmORMain.PostOpMedication.AsReMed.AddedAsRequiredMedication.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpMedication.AsReMed.EditMed_AsRequired' at Center.", repo.FrmORMain.PostOpMedication.AsReMed.EditMed_AsRequiredInfo, new RecordItemIndex(2));
            repo.FrmORMain.PostOpMedication.AsReMed.EditMed_AsRequired.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddAsRequiredPRNMedication.DoseRangeInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AsRe_DoseRange'.", new RecordItemIndex(4));
            Keyboard.Press(Edit_AsRe_DoseRange);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddAsRequiredPRNMedication.FreqTimeInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_FreqTime'.", new RecordItemIndex(6));
            Keyboard.Press(Edit_FreqTime);
            Delay.Milliseconds(100);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddAsRequiredPRNMedication.DoseCalculationInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AsRe_DoseCalculation'.", new RecordItemIndex(8));
            Keyboard.Press(Edit_AsRe_DoseCalculation);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddAsRequiredPRNMedication.ButtonOK' at Center.", repo.AddAsRequiredPRNMedication.ButtonOKInfo, new RecordItemIndex(9));
            repo.AddAsRequiredPRNMedication.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.PostOpMedication.AsReMed.EditedAsRequiredMedication'.", repo.FrmORMain.PostOpMedication.AsReMed.EditedAsRequiredMedicationInfo, new RecordItemIndex(10));
            Validate.Exists(repo.FrmORMain.PostOpMedication.AsReMed.EditedAsRequiredMedicationInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Drugs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddDrug recording.
    /// </summary>
    [TestModule("278a4b37-747a-4f29-be21-d6fb9f795801", ModuleType.Recording, 1)]
    public partial class AddDrug : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddDrug instance = new AddDrug();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddDrug()
        {
            DrugProduct = "Acarbose";
            Mode = "Bolus";
            Dosage = "100";
            Unit = "ml";
            Comment = "This is a test drug";
            Route = "Epidural";
            DoseUnit = "100 ml";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddDrug Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mode;

        /// <summary>
        /// Gets or sets the value of variable Mode.
        /// </summary>
        [TestVariable("1b979c99-b13c-4279-9c30-2bce9a2201bb")]
        public string Mode
        {
            get { return _Mode; }
            set { _Mode = value; }
        }

        string _Dosage;

        /// <summary>
        /// Gets or sets the value of variable Dosage.
        /// </summary>
        [TestVariable("42721768-1436-4016-bf22-28353758058b")]
        public string Dosage
        {
            get { return _Dosage; }
            set { _Dosage = value; }
        }

        string _Unit;

        /// <summary>
        /// Gets or sets the value of variable Unit.
        /// </summary>
        [TestVariable("71a2389c-f89e-4c9b-9fd1-016968e19a38")]
        public string Unit
        {
            get { return _Unit; }
            set { _Unit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DrugProduct.
        /// </summary>
        [TestVariable("6bf7debe-08d8-4aec-8623-f9909efbc72e")]
        public string DrugProduct
        {
            get { return repo.DrugProduct; }
            set { repo.DrugProduct = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Comment.
        /// </summary>
        [TestVariable("e8879fcd-a8bf-4031-9eac-52387f3e6a9a")]
        public string Comment
        {
            get { return repo.Comment; }
            set { repo.Comment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Route.
        /// </summary>
        [TestVariable("a834081f-0913-4e72-a515-103cd989ca41")]
        public string Route
        {
            get { return repo.Route; }
            set { repo.Route = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DoseUnit.
        /// </summary>
        [TestVariable("b39ccba1-21c8-4d2d-9901-b253fec485cf")]
        public string DoseUnit
        {
            get { return repo.DoseUnit; }
            set { repo.DoseUnit = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Drugs.Tabs.DrugsTab' at Center.", repo.FrmORMain.Drugs.Tabs.DrugsTabInfo, new RecordItemIndex(0));
            repo.FrmORMain.Drugs.Tabs.DrugsTab.Click();
            Delay.Milliseconds(200);
            
            // Click Add Drug
            Report.Log(ReportLevel.Info, "Mouse", "Click Add Drug\r\nMouse Left Click item 'FrmORMain.Drugs.Drugs.AddDrugF4' at Center.", repo.FrmORMain.Drugs.Drugs.AddDrugF4Info, new RecordItemIndex(1));
            repo.FrmORMain.Drugs.Drugs.AddDrugF4.Click();
            Delay.Milliseconds(200);
            
            // CLick on Drug Product drop down list
            Report.Log(ReportLevel.Info, "Mouse", "CLick on Drug Product drop down list\r\nMouse Left Click item 'FrmEditDrug.DrugProduct' at 308;16.", repo.FrmEditDrug.DrugProductInfo, new RecordItemIndex(2));
            repo.FrmEditDrug.DrugProduct.Click("308;16");
            Delay.Milliseconds(200);
            
            // Enter Drug Product name
            Report.Log(ReportLevel.Info, "Keyboard", "Enter Drug Product name\r\nKey sequence from variable '$DrugProduct'.", new RecordItemIndex(3));
            Keyboard.Press(DrugProduct);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Select Mode (Bolus/Infusion)
            SelectMode(Mode);
            Delay.Milliseconds(0);
            
            // Enter dose
            EnterDosage(Mode, Dosage);
            Delay.Milliseconds(0);
            
            // Enter Unit based on the selected Mode
            EnterUnit(Mode, Unit);
            Delay.Milliseconds(0);
            
            // Enter Comment
            Report.Log(ReportLevel.Info, "Mouse", "Enter Comment\r\nMouse Left Click item 'FrmEditDrug.Comment' at Center.", repo.FrmEditDrug.CommentInfo, new RecordItemIndex(8));
            repo.FrmEditDrug.Comment.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Comment'.", new RecordItemIndex(9));
            Keyboard.Press(Comment);
            Delay.Milliseconds(100);
            
            // Enter Route
            EnterRoute(Route);
            Delay.Milliseconds(0);
            
            // Click OK
            Report.Log(ReportLevel.Info, "Mouse", "Click OK\r\nMouse Left Click item 'FrmEditDrug.OK' at Center.", repo.FrmEditDrug.OKInfo, new RecordItemIndex(11));
            repo.FrmEditDrug.OK.Click();
            Delay.Milliseconds(200);
            
            // Validate the  Drug is added succesfully
            Report.Log(ReportLevel.Info, "Validation", "Validate the  Drug is added succesfully\r\nValidating Exists on item 'FrmORMain.Drugs.Drugs.DrugListItem'.", repo.FrmORMain.Drugs.Drugs.DrugListItemInfo, new RecordItemIndex(12));
            Validate.Exists(repo.FrmORMain.Drugs.Drugs.DrugListItemInfo);
            Delay.Milliseconds(0);
            
            // Click on Summary tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on Summary tab\r\nMouse Left Click item 'FrmORMain.Drugs.Tabs.DrugSummaryTab' at Center.", repo.FrmORMain.Drugs.Tabs.DrugSummaryTabInfo, new RecordItemIndex(13));
            repo.FrmORMain.Drugs.Tabs.DrugSummaryTab.Click();
            Delay.Milliseconds(200);
            
            // Validate the  Drug is added succesfully in Drug Summary
            CheckInDrugSummary(DrugProduct, Mode);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

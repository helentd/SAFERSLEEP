///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Drugs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CheckAllergyAlert recording.
    /// </summary>
    [TestModule("1f0bbd95-c016-4bcc-92da-2d2ae10b83d3", ModuleType.Recording, 1)]
    public partial class CheckAllergyAlert : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static CheckAllergyAlert instance = new CheckAllergyAlert();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CheckAllergyAlert()
        {
            DrugProduct = "Acarbose";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CheckAllergyAlert Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable DrugProduct.
        /// </summary>
        [TestVariable("ffe52af4-dd04-48ee-9f06-fc0c2cfd0c29")]
        public string DrugProduct
        {
            get { return repo.DrugProduct; }
            set { repo.DrugProduct = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Drugs.Tabs.DrugsTab' at Center.", repo.FrmORMain.Drugs.Tabs.DrugsTabInfo, new RecordItemIndex(0));
            repo.FrmORMain.Drugs.Tabs.DrugsTab.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Drugs.Drugs.AddDrugF4' at Center.", repo.FrmORMain.Drugs.Drugs.AddDrugF4Info, new RecordItemIndex(1));
            repo.FrmORMain.Drugs.Drugs.AddDrugF4.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditDrug.DrugProduct' at Center.", repo.FrmEditDrug.DrugProductInfo, new RecordItemIndex(2));
            repo.FrmEditDrug.DrugProduct.Click();
            Delay.Milliseconds(200);
            
            // Enter Drug Product name
            Report.Log(ReportLevel.Info, "Keyboard", "Enter Drug Product name\r\nKey sequence from variable '$DrugProduct'.", new RecordItemIndex(3));
            Keyboard.Press(DrugProduct);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'FrmEditDrug.AllergyChecking.AlertBox'.", repo.FrmEditDrug.AllergyChecking.AlertBoxInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmEditDrug.AllergyChecking.AlertBoxInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='False') on item 'FrmEditDrug.OK'.", repo.FrmEditDrug.OKInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmEditDrug.OKInfo, "Enabled", "False");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditDrug.Cancel' at Center.", repo.FrmEditDrug.CancelInfo, new RecordItemIndex(7));
            repo.FrmEditDrug.Cancel.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

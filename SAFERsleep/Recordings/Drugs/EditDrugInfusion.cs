///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Drugs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditDrugInfusion recording.
    /// </summary>
    [TestModule("a489f40f-7fbc-48d8-97fa-693566c88a7c", ModuleType.Recording, 1)]
    public partial class EditDrugInfusion : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditDrugInfusion instance = new EditDrugInfusion();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditDrugInfusion()
        {
            NewDose = "6.55";
            NewUnit = "mg/hr";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditDrugInfusion Instance
        {
            get { return instance; }
        }

#region Variables

        string _NewDose;

        /// <summary>
        /// Gets or sets the value of variable NewDose.
        /// </summary>
        [TestVariable("5df55561-226e-4593-a631-f3e2dd6b0208")]
        public string NewDose
        {
            get { return _NewDose; }
            set { _NewDose = value; }
        }

        string _NewUnit;

        /// <summary>
        /// Gets or sets the value of variable NewUnit.
        /// </summary>
        [TestVariable("469dd7aa-5da2-4cdb-b9ac-ee924ee32a98")]
        public string NewUnit
        {
            get { return _NewUnit; }
            set { _NewUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Comment.
        /// </summary>
        [TestVariable("b107503a-1905-4d9f-a866-10f858263131")]
        public string Comment
        {
            get { return repo.Comment; }
            set { repo.Comment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Route.
        /// </summary>
        [TestVariable("546ee88d-2806-45a5-b54d-c0dc04e81fcc")]
        public string Route
        {
            get { return repo.Route; }
            set { repo.Route = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DoseUnit.
        /// </summary>
        [TestVariable("b39ccba1-21c8-4d2d-9901-b253fec485cf")]
        public string DoseUnit
        {
            get { return repo.DoseUnit; }
            set { repo.DoseUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DrugProduct.
        /// </summary>
        [TestVariable("641b5c67-a6fb-4e92-8699-237e53aff7d5")]
        public string DrugProduct
        {
            get { return repo.DrugProduct; }
            set { repo.DrugProduct = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NewDoseUnit.
        /// </summary>
        [TestVariable("5663cf1e-28c8-430f-bea4-1fb695ab6511")]
        public string NewDoseUnit
        {
            get { return repo.NewDoseUnit; }
            set { repo.NewDoseUnit = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Select item to edit
            Report.Log(ReportLevel.Info, "Mouse", "Select item to edit\r\nMouse Left DoubleClick item 'FrmORMain.Drugs.Drugs.DrugListItem' at Center.", repo.FrmORMain.Drugs.Drugs.DrugListItemInfo, new RecordItemIndex(0));
            repo.FrmORMain.Drugs.Drugs.DrugListItem.DoubleClick();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmEditDrug.InfusionRate' at Center.", repo.FrmEditDrug.InfusionRateInfo, new RecordItemIndex(1));
            repo.FrmEditDrug.InfusionRate.DoubleClick();
            Delay.Milliseconds(200);
            
            // Enter new Rate
            Report.Log(ReportLevel.Info, "Keyboard", "Enter new Rate\r\nKey sequence from variable '$NewDose'.", new RecordItemIndex(2));
            Keyboard.Press(NewDose);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmEditDrug.UnitInfusion' at Center.", repo.FrmEditDrug.UnitInfusionInfo, new RecordItemIndex(3));
            repo.FrmEditDrug.UnitInfusion.DoubleClick();
            Delay.Milliseconds(200);
            
            // Enter new Unit
            Report.Log(ReportLevel.Info, "Keyboard", "Enter new Unit\r\nKey sequence from variable '$NewUnit'.", new RecordItemIndex(4));
            Keyboard.Press(NewUnit);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditDrug.OK' at Center.", repo.FrmEditDrug.OKInfo, new RecordItemIndex(6));
            repo.FrmEditDrug.OK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.Drugs.Drugs.EditedDrugListItem'.", repo.FrmORMain.Drugs.Drugs.EditedDrugListItemInfo, new RecordItemIndex(7));
            Validate.Exists(repo.FrmORMain.Drugs.Drugs.EditedDrugListItemInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

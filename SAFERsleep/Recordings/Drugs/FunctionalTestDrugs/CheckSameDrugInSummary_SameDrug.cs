///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Drugs.FunctionalTestDrugs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CheckSameDrugInSummary_SameDrug recording.
    /// </summary>
    [TestModule("072ced1b-9605-4474-b36c-00829d8d7e11", ModuleType.Recording, 1)]
    public partial class CheckSameDrugInSummary_SameDrug : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static CheckSameDrugInSummary_SameDrug instance = new CheckSameDrugInSummary_SameDrug();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CheckSameDrugInSummary_SameDrug()
        {
            Mode = "Bolus";
            DrugOrder = "0";
            Dosage1 = "100";
            Dosage2 = "5.5";
            TimeAddDrug1 = "00:00";
            TimeAddDrug2 = "00:00";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CheckSameDrugInSummary_SameDrug Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mode;

        /// <summary>
        /// Gets or sets the value of variable Mode.
        /// </summary>
        [TestVariable("f479b4cc-7c89-469b-a700-b6faf793f879")]
        public string Mode
        {
            get { return _Mode; }
            set { _Mode = value; }
        }

        string _DrugOrder;

        /// <summary>
        /// Gets or sets the value of variable DrugOrder.
        /// </summary>
        [TestVariable("fa2f42b4-e168-4758-970d-414a1dc98d0d")]
        public string DrugOrder
        {
            get { return _DrugOrder; }
            set { _DrugOrder = value; }
        }

        string _Dosage1;

        /// <summary>
        /// Gets or sets the value of variable Dosage1.
        /// </summary>
        [TestVariable("4ae194c0-3b6c-4b29-93ba-e7b80397acd7")]
        public string Dosage1
        {
            get { return _Dosage1; }
            set { _Dosage1 = value; }
        }

        string _Dosage2;

        /// <summary>
        /// Gets or sets the value of variable Dosage2.
        /// </summary>
        [TestVariable("6d8854a3-06ff-441c-b33f-0ee8b149e13a")]
        public string Dosage2
        {
            get { return _Dosage2; }
            set { _Dosage2 = value; }
        }

        string _TimeAddDrug1;

        /// <summary>
        /// Gets or sets the value of variable TimeAddDrug1.
        /// </summary>
        [TestVariable("2ace52e9-5d21-4c5b-88c1-3964e9f4a6e2")]
        public string TimeAddDrug1
        {
            get { return _TimeAddDrug1; }
            set { _TimeAddDrug1 = value; }
        }

        string _TimeAddDrug2;

        /// <summary>
        /// Gets or sets the value of variable TimeAddDrug2.
        /// </summary>
        [TestVariable("9236a04d-df55-43a8-80e6-bd0441988592")]
        public string TimeAddDrug2
        {
            get { return _TimeAddDrug2; }
            set { _TimeAddDrug2 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DrugProduct.
        /// </summary>
        [TestVariable("641b5c67-a6fb-4e92-8699-237e53aff7d5")]
        public string DrugProduct
        {
            get { return repo.DrugProduct; }
            set { repo.DrugProduct = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TotalDose.
        /// </summary>
        [TestVariable("8ede0eca-7585-496f-b143-de552f6bb946")]
        public string TotalDose
        {
            get { return repo.TotalDose; }
            set { repo.TotalDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TotalTime.
        /// </summary>
        [TestVariable("ec906add-8706-44ad-867e-ee048c063db7")]
        public string TotalTime
        {
            get { return repo.TotalTime; }
            set { repo.TotalTime = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on Summary tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on Summary tab\r\nMouse Left Click item 'FrmORMain.Drugs.Tabs.DrugSummaryTab' at Center.", repo.FrmORMain.Drugs.Tabs.DrugSummaryTabInfo, new RecordItemIndex(0));
            repo.FrmORMain.Drugs.Tabs.DrugSummaryTab.Click();
            Delay.Milliseconds(200);
            
            // Check Drug in Drug Summary
            //CheckInDrugSummary(Mode, ValueConverter.ArgumentFromString<double>("Dosage1", Dosage1), ValueConverter.ArgumentFromString<double>("Dosage2", Dosage2), TimeAddDrug1, TimeAddDrug2);
            //Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

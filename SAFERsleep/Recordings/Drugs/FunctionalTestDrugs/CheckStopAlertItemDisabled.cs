///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Drugs.FunctionalTestDrugs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CheckStopAlertItemDisabled recording.
    /// </summary>
    [TestModule("9b7994a5-d2e3-42e2-9afa-23178348605c", ModuleType.Recording, 1)]
    public partial class CheckStopAlertItemDisabled : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static CheckStopAlertItemDisabled instance = new CheckStopAlertItemDisabled();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CheckStopAlertItemDisabled()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CheckStopAlertItemDisabled Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable AllergyDetails.
        /// </summary>
        [TestVariable("7f5f4385-d889-461a-9504-94e9728bd5b4")]
        public string AllergyDetails
        {
            get { return repo.AllergyDetails; }
            set { repo.AllergyDetails = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AlertType.
        /// </summary>
        [TestVariable("b0d4a047-e8c1-4b5b-9e27-2fd60cbbb03f")]
        public string AlertType
        {
            get { return repo.AlertType; }
            set { repo.AlertType = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AllergyName.
        /// </summary>
        [TestVariable("0d54d1d0-8b75-4237-806a-ee5e4f42c276")]
        public string AllergyName
        {
            get { return repo.AllergyName; }
            set { repo.AllergyName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DrugInAlert.
        /// </summary>
        [TestVariable("273abd9f-f7a2-4fc2-b514-28ea5d429573")]
        public string DrugInAlert
        {
            get { return repo.DrugInAlert; }
            set { repo.DrugInAlert = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on Patient Detail menu
            Report.Log(ReportLevel.Info, "Mouse", "Click on Patient Detail menu\r\nMouse Left Click item 'FrmORMain.OR_Modules.PatientDetails' at Center.", repo.FrmORMain.OR_Modules.PatientDetailsInfo, new RecordItemIndex(0));
            repo.FrmORMain.OR_Modules.PatientDetails.Click();
            Delay.Milliseconds(200);
            
            // Click on Alert Name
            Report.Log(ReportLevel.Info, "Mouse", "Click on Alert Name\r\nMouse Left DoubleClick item 'FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.AllergyListItemDetail' at Center.", repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.AllergyListItemDetailInfo, new RecordItemIndex(1));
            repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.AllergyListItemDetail.DoubleClick();
            Delay.Milliseconds(200);
            
            // Validate this drug is disabled in t allergy detail
            Report.Log(ReportLevel.Info, "Validation", "Validate this drug is disabled in t allergy detail\r\nValidating Exists on item 'EditMedicalAlert.DrugInAlert'.", repo.EditMedicalAlert.DrugInAlertInfo, new RecordItemIndex(2));
            Validate.Exists(repo.EditMedicalAlert.DrugInAlertInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Drugs.FunctionalTestDrugs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddNewDrug recording.
    /// </summary>
    [TestModule("77313416-b12a-48bd-a511-e77fdc39c052", ModuleType.Recording, 1)]
    public partial class AddNewDrug : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddNewDrug instance = new AddNewDrug();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddNewDrug()
        {
            DrugProduct = "Warfarin";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddNewDrug Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable DrugProduct.
        /// </summary>
        [TestVariable("3fbbafb2-8d1d-4c35-98c0-9d56dbad8c6c")]
        public string DrugProduct
        {
            get { return repo.DrugProduct; }
            set { repo.DrugProduct = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on button "Add" to add a new drug
            Report.Log(ReportLevel.Info, "Mouse", "Click on button \"Add\" to add a new drug\r\nMouse Left Click item 'FrmEditDrug.AddNewDrug' at Center.", repo.FrmEditDrug.AddNewDrugInfo, new RecordItemIndex(0));
            repo.FrmEditDrug.AddNewDrug.Click();
            Delay.Milliseconds(200);
            
            // Click on New Drug name Dropdown list
            Report.Log(ReportLevel.Info, "Mouse", "Click on New Drug name Dropdown list\r\nMouse Left Click item 'AddDrug.NewDrugname' at Center.", repo.AddDrug.NewDrugnameInfo, new RecordItemIndex(1));
            repo.AddDrug.NewDrugname.Click();
            Delay.Milliseconds(200);
            
            // Enter a new Drug name
            Report.Log(ReportLevel.Info, "Keyboard", "Enter a new Drug name\r\nKey sequence from variable '$DrugProduct'.", new RecordItemIndex(2));
            Keyboard.Press(DrugProduct);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Click on OK button
            Report.Log(ReportLevel.Info, "Mouse", "Click on OK button\r\nMouse Left Click item 'AddDrug.ButtonOK' at Center.", repo.AddDrug.ButtonOKInfo, new RecordItemIndex(4));
            repo.AddDrug.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Validate new drug is displayed in Drug name
            Report.Log(ReportLevel.Info, "Validation", "Validate new drug is displayed in Drug name\r\nValidating AttributeEqual (Text=$DrugProduct) on item 'FrmEditDrug.DrugProduct'.", repo.FrmEditDrug.DrugProductInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmEditDrug.DrugProductInfo, "Text", DrugProduct);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

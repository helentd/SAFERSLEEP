///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Drugs.FunctionalTestDrugs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddDrugUsingTab recording.
    /// </summary>
    [TestModule("db6b300e-6730-4fbe-a5e1-20ae95df0025", ModuleType.Recording, 1)]
    public partial class AddDrugUsingTab : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddDrugUsingTab instance = new AddDrugUsingTab();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddDrugUsingTab()
        {
            TimeAddDrug = "00:00";
            DrugProduct = "Warfarin";
            Mode = "Bolus";
            Dosage = "100";
            Unit = "mg";
            Comment = "This is a test drug";
            Route = "Epidural";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddDrugUsingTab Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mode;

        /// <summary>
        /// Gets or sets the value of variable Mode.
        /// </summary>
        [TestVariable("5f583764-adb6-4d31-ba8b-4ae7426b5d7a")]
        public string Mode
        {
            get { return _Mode; }
            set { _Mode = value; }
        }

        string _Dosage;

        /// <summary>
        /// Gets or sets the value of variable Dosage.
        /// </summary>
        [TestVariable("c896af79-3e21-4200-a949-f32fc3087902")]
        public string Dosage
        {
            get { return _Dosage; }
            set { _Dosage = value; }
        }

        string _Unit;

        /// <summary>
        /// Gets or sets the value of variable Unit.
        /// </summary>
        [TestVariable("11a4acba-8088-486d-994d-493aced32c95")]
        public string Unit
        {
            get { return _Unit; }
            set { _Unit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TimeAddDrug.
        /// </summary>
        [TestVariable("dde54051-d161-4222-8064-25d6f41be6c2")]
        public string TimeAddDrug
        {
            get { return repo.TimeAddDrug; }
            set { repo.TimeAddDrug = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DrugProduct.
        /// </summary>
        [TestVariable("cf6383db-2d44-4482-a73d-39789083c034")]
        public string DrugProduct
        {
            get { return repo.DrugProduct; }
            set { repo.DrugProduct = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Comment.
        /// </summary>
        [TestVariable("66de8de9-785d-4bd3-9511-cad181833c61")]
        public string Comment
        {
            get { return repo.Comment; }
            set { repo.Comment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Route.
        /// </summary>
        [TestVariable("bbc22a80-d44a-4450-a1be-2d14656d56dd")]
        public string Route
        {
            get { return repo.Route; }
            set { repo.Route = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.OR_Modules.Drugs' at Center.", repo.FrmORMain.OR_Modules.DrugsInfo, new RecordItemIndex(0));
            repo.FrmORMain.OR_Modules.Drugs.Click();
            Delay.Milliseconds(200);
            
            // Click on Drug tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on Drug tab\r\nMouse Left Click item 'FrmORMain.Drugs.Tabs.DrugsTab' at Center.", repo.FrmORMain.Drugs.Tabs.DrugsTabInfo, new RecordItemIndex(1));
            repo.FrmORMain.Drugs.Tabs.DrugsTab.Click();
            Delay.Milliseconds(200);
            
            // Press F4 to add drug
            Report.Log(ReportLevel.Info, "Keyboard", "Press F4 to add drug\r\nKey 'F4' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.F4, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Save the time when add drug
            Report.Log(ReportLevel.Info, "Get Value", "Save the time when add drug\r\nGetting attribute 'Text' from item 'FrmEditDrug.DrugTime' and assigning its value to variable 'TimeAddDrug'.", repo.FrmEditDrug.DrugTimeInfo, new RecordItemIndex(3));
            TimeAddDrug = repo.FrmEditDrug.DrugTime.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            // Press tab from Drug Product
            Report.Log(ReportLevel.Info, "Keyboard", "Press tab from Drug Product\r\nKey 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Open Add new drug window
            Report.Log(ReportLevel.Info, "Keyboard", "Open Add new drug window\r\nKey 'Enter' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Enter a new Drug name
            Report.Log(ReportLevel.Info, "Keyboard", "Enter a new Drug name\r\nKey sequence from variable '$DrugProduct'.", new RecordItemIndex(6));
            Keyboard.Press(DrugProduct);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Press tab to focus on button OK
            Report.Log(ReportLevel.Info, "Keyboard", "Press tab to focus on button OK\r\nKey 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Press enter to save
            Report.Log(ReportLevel.Info, "Keyboard", "Press enter to save\r\nKey 'Enter' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Validate new drug is displayed in Drug name
            Report.Log(ReportLevel.Info, "Validation", "Validate new drug is displayed in Drug name\r\nValidating AttributeEqual (Text=$DrugProduct) on item 'FrmEditDrug.DrugProduct'.", repo.FrmEditDrug.DrugProductInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmEditDrug.DrugProductInfo, "Text", DrugProduct);
            Delay.Milliseconds(0);
            
            // Select Mode
            DRUGCodeCollection.SelectMode(Mode);
            Delay.Milliseconds(0);
            
            // Enter Dose/Rate
            EnterDosageUsingTab(Mode, Dosage);
            Delay.Milliseconds(0);
            
            // EnterUnit
            EnterUnitUsingTab(Mode, Unit);
            Delay.Milliseconds(0);
            
            // EnterComment
            EnterCommentUsingTab(Comment);
            Delay.Milliseconds(0);
            
            // Enter Route
            EnterRouteUsingTab(Route);
            Delay.Milliseconds(0);
            
            // Press tab
            Report.Log(ReportLevel.Info, "Keyboard", "Press tab\r\nKey 'Tab' Press.", new RecordItemIndex(16));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Press tab
            Report.Log(ReportLevel.Info, "Keyboard", "Press tab\r\nKey 'Tab' Press.", new RecordItemIndex(17));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Press tab
            Report.Log(ReportLevel.Info, "Keyboard", "Press tab\r\nKey 'Tab' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Press tab to Button OK
            Report.Log(ReportLevel.Info, "Keyboard", "Press tab to Button OK\r\nKey 'Tab' Press.", new RecordItemIndex(19));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Press tab to Button Cancel
            Report.Log(ReportLevel.Info, "Keyboard", "Press tab to Button Cancel\r\nKey 'Tab' Press.", new RecordItemIndex(20));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Left}{Return}'.", new RecordItemIndex(21));
            Keyboard.Press("{Left}{Return}");
            Delay.Milliseconds(0);
            
            // Enter to click on OK  to Save Drug
            Report.Log(ReportLevel.Info, "Keyboard", "Enter to click on OK  to Save Drug\r\nKey 'Enter' Press.", new RecordItemIndex(22));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

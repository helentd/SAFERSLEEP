///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Drugs.FunctionalTestDrugs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CheckWarningAlert recording.
    /// </summary>
    [TestModule("eaefb846-d302-4234-b7e9-30ba907a35e6", ModuleType.Recording, 1)]
    public partial class CheckWarningAlert : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static CheckWarningAlert instance = new CheckWarningAlert();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CheckWarningAlert()
        {
            DrugProduct = "Acarbose";
            AlertName = "Opiod";
            AlertType = "Allergy";
            AlertClass = "Class";
            DrugClass = "Drug";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CheckWarningAlert Instance
        {
            get { return instance; }
        }

#region Variables

        string _AlertName;

        /// <summary>
        /// Gets or sets the value of variable AlertName.
        /// </summary>
        [TestVariable("524ee774-7cb3-49eb-83e6-50d08f5fa745")]
        public string AlertName
        {
            get { return _AlertName; }
            set { _AlertName = value; }
        }

        string _AlertClass;

        /// <summary>
        /// Gets or sets the value of variable AlertClass.
        /// </summary>
        [TestVariable("57204f3a-ba1b-4131-97b4-c09fa6b24632")]
        public string AlertClass
        {
            get { return _AlertClass; }
            set { _AlertClass = value; }
        }

        string _DrugClass;

        /// <summary>
        /// Gets or sets the value of variable DrugClass.
        /// </summary>
        [TestVariable("82702d86-968a-484e-a077-93ee4268393e")]
        public string DrugClass
        {
            get { return _DrugClass; }
            set { _DrugClass = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable WarningMessage.
        /// </summary>
        [TestVariable("8fd852be-fb2f-4129-adb5-4f5d3e90c2f0")]
        public string WarningMessage
        {
            get { return repo.WarningMessage; }
            set { repo.WarningMessage = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DrugProduct.
        /// </summary>
        [TestVariable("760b896e-0b12-4b92-9097-d57c154a2956")]
        public string DrugProduct
        {
            get { return repo.DrugProduct; }
            set { repo.DrugProduct = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AlertType.
        /// </summary>
        [TestVariable("95d2554e-c3c6-4c89-9479-28ad000735dc")]
        public string AlertType
        {
            get { return repo.AlertType; }
            set { repo.AlertType = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // validate Warning box displays when added Drug is in patient's allergy list
            CheckWarningAllert(AlertName, AlertType, AlertClass, DrugClass);
            Delay.Milliseconds(0);
            
            // Validate OK button is disable
            Report.Log(ReportLevel.Info, "Validation", "Validate OK button is disable\r\nValidating AttributeEqual (Enabled='False') on item 'FrmEditDrug.OK'.", repo.FrmEditDrug.OKInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmEditDrug.OKInfo, "Enabled", "False");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Main_Menu
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Retrieve_EndedCase recording.
    /// </summary>
    [TestModule("0d85b1bb-fd95-4b93-9afa-1d9265fc8c08", ModuleType.Recording, 1)]
    public partial class Retrieve_EndedCase : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static Retrieve_EndedCase instance = new Retrieve_EndedCase();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Retrieve_EndedCase()
        {
            DateFormat = "dd/MM/yyyy";
            NHI = "AUT9132";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Retrieve_EndedCase Instance
        {
            get { return instance; }
        }

#region Variables

        string _DateFormat;

        /// <summary>
        /// Gets or sets the value of variable DateFormat.
        /// </summary>
        [TestVariable("941df373-7391-499f-937c-0fbd71cc66ef")]
        public string DateFormat
        {
            get { return _DateFormat; }
            set { _DateFormat = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NHI.
        /// </summary>
        [TestVariable("da2d7884-c194-4b25-b7c9-6a17e4f16622")]
        public string NHI
        {
            get { return repo.NHI; }
            set { repo.NHI = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(0));
            Delay.Duration(30000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMainMenu.RetrieveAnaesthetic' at Center.", repo.FrmMainMenu.RetrieveAnaestheticInfo, new RecordItemIndex(1));
            repo.FrmMainMenu.RetrieveAnaesthetic.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RetrieveAnaesthetic.SearchAnaesthetics.SearchAnaesthetics' at Center.", repo.RetrieveAnaesthetic.SearchAnaesthetics.SearchAnaestheticsInfo, new RecordItemIndex(2));
            repo.RetrieveAnaesthetic.SearchAnaesthetics.SearchAnaesthetics.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.EnterDate_Today(repo.RetrieveAnaesthetic.SearchAnaesthetics.OperationDateInfo, DateFormat);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RetrieveAnaesthetic.SearchAnaesthetics.NHINumber' at Center.", repo.RetrieveAnaesthetic.SearchAnaesthetics.NHINumberInfo, new RecordItemIndex(4));
            repo.RetrieveAnaesthetic.SearchAnaesthetics.NHINumber.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Home' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Home, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NHI'.", new RecordItemIndex(6));
            Keyboard.Press(NHI);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RetrieveAnaesthetic.SearchAnaesthetics.Search' at Center.", repo.RetrieveAnaesthetic.SearchAnaesthetics.SearchInfo, new RecordItemIndex(7));
            repo.RetrieveAnaesthetic.SearchAnaesthetics.Search.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RetrieveAnaesthetic.SearchListItem' at Center.", repo.RetrieveAnaesthetic.SearchListItemInfo, new RecordItemIndex(8));
            repo.RetrieveAnaesthetic.SearchListItem.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RetrieveAnaesthetic.ButtonRetrieve' at Center.", repo.RetrieveAnaesthetic.ButtonRetrieveInfo, new RecordItemIndex(9));
            repo.RetrieveAnaesthetic.ButtonRetrieve.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ConfirmPatientIdentity.ButtonYes' at Center.", repo.ConfirmPatientIdentity.ButtonYesInfo, new RecordItemIndex(10));
            repo.ConfirmPatientIdentity.ButtonYes.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Information.ButtonOK' at Center.", repo.Information.ButtonOKInfo, new RecordItemIndex(11));
            repo.Information.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.Patient_Details.Tabs.MedicalAlertsAndDrugAllergiesCITab'.", repo.FrmORMain.Patient_Details.Tabs.MedicalAlertsAndDrugAllergiesCITabInfo, new RecordItemIndex(12));
            Validate.Exists(repo.FrmORMain.Patient_Details.Tabs.MedicalAlertsAndDrugAllergiesCITabInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

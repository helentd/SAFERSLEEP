///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SAFERsleep.Recordings.Main_Menu
{
    public partial class OpenNewAnaesthetic_NewPatient
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
	
        public void SelectSex(string Sex)
        {
        	repo.FrmUpdatePatientDetails.Sex.Click();
        	
        	if (Sex == "Male")
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
        	else if (Sex == "Female")
        	{
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
        	}
        	else if (Sex == "Not Known")
        	{
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);        		
        	}
        	else if (Sex == "Indeterminate")
        	{
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
        		Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
				Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);         		
        	}
        	
        	Keyboard.Press(System.Windows.Forms.Keys.Enter, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
        }

        public void Enter_DOB(RepoItemInfo textInfo, string IsPaed)
        {
        	if (IsPaed == "true")
        	{
        		Ranorex.Report.Info("Enter today's date for date of birth");
        		String Date_Today = System.DateTime.Now.ToString("dd/MM/yyyy");
        		textInfo.FindAdapter<Text>().PressKeys(Date_Today);
        		Delay.Milliseconds(200);
        	}
        	else if (IsPaed == "adult-paed")
        	{
        		Ranorex.Report.Info("Date of birth will be set to have patient with 15 years of age");
        		System.DateTime Date_Today = System.DateTime.Now;
        		System.DateTime DOB = Date_Today.AddYears(-15);
        		textInfo.FindAdapter<Text>().PressKeys(DOB.ToString("dd/MM/yyyy"));
        		Delay.Milliseconds(200);
        	}
        	else if (IsPaed == "unknown")
        	{
        		Ranorex.Report.Info("Unknown Date of Birth");
        		repo.FrmUpdatePatientDetails.UnknownDateOfBirth.Click();
				Delay.Milliseconds(200);
        	}
        	else
        	{
	            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DOB' with focus on 'textInfo'.", textInfo);
	            textInfo.FindAdapter<Text>().PressKeys(DOB);
	            Delay.Milliseconds(200);
        	}
        }
    }
}

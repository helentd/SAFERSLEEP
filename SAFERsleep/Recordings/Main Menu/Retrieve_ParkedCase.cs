///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Main_Menu
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Retrieve_ParkedCase recording.
    /// </summary>
    [TestModule("e1e89b5d-64e3-49b5-987a-661f63b60a87", ModuleType.Recording, 1)]
    public partial class Retrieve_ParkedCase : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static Retrieve_ParkedCase instance = new Retrieve_ParkedCase();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Retrieve_ParkedCase()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Retrieve_ParkedCase Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable PatientNumber.
        /// </summary>
        [TestVariable("bf9e70b8-190b-4026-a0d5-52a1a3a65288")]
        public string PatientNumber
        {
            get { return repo.PatientNumber; }
            set { repo.PatientNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(0));
            Delay.Duration(30000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMainMenu.RetrieveAnaesthetic' at Center.", repo.FrmMainMenu.RetrieveAnaestheticInfo, new RecordItemIndex(1));
            repo.FrmMainMenu.RetrieveAnaesthetic.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RetrieveAnaesthetic.PatientNumber' at Center.", repo.RetrieveAnaesthetic.PatientNumberInfo, new RecordItemIndex(2));
            repo.RetrieveAnaesthetic.PatientNumber.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RetrieveAnaesthetic.ButtonRetrieve' at Center.", repo.RetrieveAnaesthetic.ButtonRetrieveInfo, new RecordItemIndex(3));
            repo.RetrieveAnaesthetic.ButtonRetrieve.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ConfirmPatientIdentity'.", repo.ConfirmPatientIdentity.SelfInfo, new RecordItemIndex(4));
            Validate.Exists(repo.ConfirmPatientIdentity.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ConfirmPatientIdentity.ButtonYes' at Center.", repo.ConfirmPatientIdentity.ButtonYesInfo, new RecordItemIndex(5));
            repo.ConfirmPatientIdentity.ButtonYes.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(6));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.Patient_Details.Tabs.MedicalAlertsAndDrugAllergiesCITab'.", repo.FrmORMain.Patient_Details.Tabs.MedicalAlertsAndDrugAllergiesCITabInfo, new RecordItemIndex(7));
            Validate.Exists(repo.FrmORMain.Patient_Details.Tabs.MedicalAlertsAndDrugAllergiesCITabInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

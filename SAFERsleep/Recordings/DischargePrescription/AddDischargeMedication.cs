///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.DischargePrescription
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddDischargeMedication recording.
    /// </summary>
    [TestModule("ba1af877-3db4-4627-85ea-ddce8e64eebb", ModuleType.Recording, 1)]
    public partial class AddDischargeMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddDischargeMedication instance = new AddDischargeMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddDischargeMedication()
        {
            DischargeDrug = "Alcohol";
            DischarInstruction = "This is Discharge Instruction test";
            DischarSupply = "This is Discharge Supply test";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddDischargeMedication Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable DischarInstruction.
        /// </summary>
        [TestVariable("7620fe25-af78-4abe-962b-3dca196a0093")]
        public string DischarInstruction
        {
            get { return repo.DischarInstruction; }
            set { repo.DischarInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DischarSupply.
        /// </summary>
        [TestVariable("b05e53eb-c15c-486d-8f50-f6dab3a316d2")]
        public string DischarSupply
        {
            get { return repo.DischarSupply; }
            set { repo.DischarSupply = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DischargeDrug.
        /// </summary>
        [TestVariable("0f4b7acc-646a-465a-93d2-cc63ccd51620")]
        public string DischargeDrug
        {
            get { return repo.DischargeDrug; }
            set { repo.DischargeDrug = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on Add button
            Report.Log(ReportLevel.Info, "Mouse", "Click on Add button\r\nMouse Left Click item 'FrmORMain.DischargePrecription.ButtonAdd' at Center.", repo.FrmORMain.DischargePrecription.ButtonAddInfo, new RecordItemIndex(0));
            repo.FrmORMain.DischargePrecription.ButtonAdd.Click();
            Delay.Milliseconds(200);
            
            // Enter Drug name
            Report.Log(ReportLevel.Info, "Mouse", "Enter Drug name\r\nMouse Left Click item 'AddDischargePrescription.DrugName' at Center.", repo.AddDischargePrescription.DrugNameInfo, new RecordItemIndex(1));
            repo.AddDischargePrescription.DrugName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DischargeDrug'.", new RecordItemIndex(2));
            Keyboard.Press(DischargeDrug);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Enter Discharge Instruction
            Report.Log(ReportLevel.Info, "Mouse", "Enter Discharge Instruction\r\nMouse Left Click item 'AddDischargePrescription.DischarInstruction' at Center.", repo.AddDischargePrescription.DischarInstructionInfo, new RecordItemIndex(4));
            repo.AddDischargePrescription.DischarInstruction.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DischarInstruction'.", new RecordItemIndex(5));
            Keyboard.Press(DischarInstruction);
            Delay.Milliseconds(100);
            
            // Enter Discharge Supply
            Report.Log(ReportLevel.Info, "Mouse", "Enter Discharge Supply\r\nMouse Left Click item 'AddDischargePrescription.Supply' at Center.", repo.AddDischargePrescription.SupplyInfo, new RecordItemIndex(6));
            repo.AddDischargePrescription.Supply.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DischarSupply'.", new RecordItemIndex(7));
            Keyboard.Press(DischarSupply);
            Delay.Milliseconds(100);
            
            // Click on Ok button
            Report.Log(ReportLevel.Info, "Mouse", "Click on Ok button\r\nMouse Left Click item 'AddDischargePrescription.ButtonOK' at Center.", repo.AddDischargePrescription.ButtonOKInfo, new RecordItemIndex(8));
            repo.AddDischargePrescription.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Verify the Medication is added succesfully
            Report.Log(ReportLevel.Info, "Validation", "Verify the Medication is added succesfully\r\nValidating Exists on item 'FrmORMain.DischargePrecription.AddedDischargeMedication'.", repo.FrmORMain.DischargePrecription.AddedDischargeMedicationInfo, new RecordItemIndex(9));
            Validate.Exists(repo.FrmORMain.DischargePrecription.AddedDischargeMedicationInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.DischargePrescription
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EnterDischargeInformaiton recording.
    /// </summary>
    [TestModule("c80bdc70-8008-4f7a-a238-0fe2d19769e9", ModuleType.Recording, 1)]
    public partial class EnterDischargeInformaiton : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EnterDischargeInformaiton instance = new EnterDischargeInformaiton();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EnterDischargeInformaiton()
        {
            AddressNumber = "1000";
            AddressRoad = "Orbit Dr";
            Suburb = "Avondale";
            City = "NorthShore";
            PostCode = "1000";
            Contact = "0291234567";
            NZMC = "111";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EnterDischargeInformaiton Instance
        {
            get { return instance; }
        }

#region Variables

        string _AddressNumber;

        /// <summary>
        /// Gets or sets the value of variable AddressNumber.
        /// </summary>
        [TestVariable("b73eb291-cf10-47ea-a98a-44fd4551d9e4")]
        public string AddressNumber
        {
            get { return _AddressNumber; }
            set { _AddressNumber = value; }
        }

        string _AddressRoad;

        /// <summary>
        /// Gets or sets the value of variable AddressRoad.
        /// </summary>
        [TestVariable("ae557a3b-90a6-4617-9454-237e5cb079f8")]
        public string AddressRoad
        {
            get { return _AddressRoad; }
            set { _AddressRoad = value; }
        }

        string _Suburb;

        /// <summary>
        /// Gets or sets the value of variable Suburb.
        /// </summary>
        [TestVariable("e52b6495-42a1-4782-baf4-730b58ef25e1")]
        public string Suburb
        {
            get { return _Suburb; }
            set { _Suburb = value; }
        }

        string _City;

        /// <summary>
        /// Gets or sets the value of variable City.
        /// </summary>
        [TestVariable("51e1ff84-6a03-47d6-baf3-0f236f5f5cdd")]
        public string City
        {
            get { return _City; }
            set { _City = value; }
        }

        string _PostCode;

        /// <summary>
        /// Gets or sets the value of variable PostCode.
        /// </summary>
        [TestVariable("58f7cb40-1bd2-438c-9a08-62bd0554cf89")]
        public string PostCode
        {
            get { return _PostCode; }
            set { _PostCode = value; }
        }

        string _Contact;

        /// <summary>
        /// Gets or sets the value of variable Contact.
        /// </summary>
        [TestVariable("31b53d27-1211-4977-ad7b-c93a2bad0c8c")]
        public string Contact
        {
            get { return _Contact; }
            set { _Contact = value; }
        }

        string _NZMC;

        /// <summary>
        /// Gets or sets the value of variable NZMC.
        /// </summary>
        [TestVariable("ac46fec0-d984-42b3-a79b-317bc2e5131c")]
        public string NZMC
        {
            get { return _NZMC; }
            set { _NZMC = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.DischargePrecription.Address.AddressLine1' at Center.", repo.FrmORMain.DischargePrecription.Address.AddressLine1Info, new RecordItemIndex(0));
            repo.FrmORMain.DischargePrecription.Address.AddressLine1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Home' Press.", new RecordItemIndex(1));
            Keyboard.Press(System.Windows.Forms.Keys.Home, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Shift+End' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.End | System.Windows.Forms.Keys.Shift, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AddressNumber'.", new RecordItemIndex(4));
            Keyboard.Press(AddressNumber);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.DischargePrecription.Address.AddressLine2' at Center.", repo.FrmORMain.DischargePrecription.Address.AddressLine2Info, new RecordItemIndex(5));
            repo.FrmORMain.DischargePrecription.Address.AddressLine2.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Home' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Home, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Shift+End' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.End | System.Windows.Forms.Keys.Shift, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AddressRoad'.", new RecordItemIndex(9));
            Keyboard.Press(AddressRoad);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.DischargePrecription.Address.Suburb' at Center.", repo.FrmORMain.DischargePrecription.Address.SuburbInfo, new RecordItemIndex(10));
            repo.FrmORMain.DischargePrecription.Address.Suburb.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Home' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Home, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Shift+End' Press.", new RecordItemIndex(12));
            Keyboard.Press(System.Windows.Forms.Keys.End | System.Windows.Forms.Keys.Shift, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Suburb'.", new RecordItemIndex(14));
            Keyboard.Press(Suburb);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.DischargePrecription.Address.City' at Center.", repo.FrmORMain.DischargePrecription.Address.CityInfo, new RecordItemIndex(15));
            repo.FrmORMain.DischargePrecription.Address.City.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Home' Press.", new RecordItemIndex(16));
            Keyboard.Press(System.Windows.Forms.Keys.Home, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Shift+End' Press.", new RecordItemIndex(17));
            Keyboard.Press(System.Windows.Forms.Keys.End | System.Windows.Forms.Keys.Shift, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$City'.", new RecordItemIndex(19));
            Keyboard.Press(City);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.DischargePrecription.Address.PostCode' at Center.", repo.FrmORMain.DischargePrecription.Address.PostCodeInfo, new RecordItemIndex(20));
            repo.FrmORMain.DischargePrecription.Address.PostCode.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Home' Press.", new RecordItemIndex(21));
            Keyboard.Press(System.Windows.Forms.Keys.Home, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Shift+End' Press.", new RecordItemIndex(22));
            Keyboard.Press(System.Windows.Forms.Keys.End | System.Windows.Forms.Keys.Shift, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(23));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PostCode'.", new RecordItemIndex(24));
            Keyboard.Press(PostCode);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.DischargePrecription.Address.Contact' at Center.", repo.FrmORMain.DischargePrecription.Address.ContactInfo, new RecordItemIndex(25));
            repo.FrmORMain.DischargePrecription.Address.Contact.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Home' Press.", new RecordItemIndex(26));
            Keyboard.Press(System.Windows.Forms.Keys.Home, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Shift+End' Press.", new RecordItemIndex(27));
            Keyboard.Press(System.Windows.Forms.Keys.End | System.Windows.Forms.Keys.Shift, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(28));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Contact'.", new RecordItemIndex(29));
            Keyboard.Press(Contact);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.DischargePrecription.Address.AnaesthetistNZMC' at Center.", repo.FrmORMain.DischargePrecription.Address.AnaesthetistNZMCInfo, new RecordItemIndex(30));
            repo.FrmORMain.DischargePrecription.Address.AnaesthetistNZMC.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Home' Press.", new RecordItemIndex(31));
            Keyboard.Press(System.Windows.Forms.Keys.Home, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Shift+End' Press.", new RecordItemIndex(32));
            Keyboard.Press(System.Windows.Forms.Keys.End | System.Windows.Forms.Keys.Shift, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(33));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NZMC'.", new RecordItemIndex(34));
            Keyboard.Press(NZMC);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

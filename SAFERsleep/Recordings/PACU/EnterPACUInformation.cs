///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.PACU
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EnterPACUInformation recording.
    /// </summary>
    [TestModule("43358dd9-0842-4e86-b4d1-3cb87dac2f2a", ModuleType.Recording, 1)]
    public partial class EnterPACUInformation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EnterPACUInformation instance = new EnterPACUInformation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EnterPACUInformation()
        {
            OxygenRate = "2";
            OxygenMask = "Open Face Mask";
            OxygenInstruction = ", then 4 L/min by Mask";
            OtherInstruction = "This is PACU  Other Instruction test";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EnterPACUInformation Instance
        {
            get { return instance; }
        }

#region Variables

        string _OxygenRate;

        /// <summary>
        /// Gets or sets the value of variable OxygenRate.
        /// </summary>
        [TestVariable("71d55505-e158-4943-a0cd-aaddf0f734db")]
        public string OxygenRate
        {
            get { return _OxygenRate; }
            set { _OxygenRate = value; }
        }

        string _OxygenMask;

        /// <summary>
        /// Gets or sets the value of variable OxygenMask.
        /// </summary>
        [TestVariable("650ace01-75e4-4986-a8c5-1ab6f91a6d06")]
        public string OxygenMask
        {
            get { return _OxygenMask; }
            set { _OxygenMask = value; }
        }

        string _OxygenInstruction;

        /// <summary>
        /// Gets or sets the value of variable OxygenInstruction.
        /// </summary>
        [TestVariable("f28d2d46-5c6e-4732-9176-6d12e15c0a12")]
        public string OxygenInstruction
        {
            get { return _OxygenInstruction; }
            set { _OxygenInstruction = value; }
        }

        string _OtherInstruction;

        /// <summary>
        /// Gets or sets the value of variable OtherInstruction.
        /// </summary>
        [TestVariable("4e94d505-75d1-4cbb-bec5-11b1befad58a")]
        public string OtherInstruction
        {
            get { return _OtherInstruction; }
            set { _OtherInstruction = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            UserCodeCollection_OR.Clear_TextBox(repo.FrmORMain.PACUInstructions.OxygenRateInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OxygenRate'.", new RecordItemIndex(1));
            Keyboard.Press(OxygenRate);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.FrmORMain.PACUInstructions.OxygenMaskInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OxygenMask'.", new RecordItemIndex(4));
            Keyboard.Press(OxygenMask);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.FrmORMain.PACUInstructions.OxygenInstructionInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OxygenInstruction'.", new RecordItemIndex(7));
            Keyboard.Press(OxygenInstruction);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.FrmORMain.PACUInstructions.OtherInstructionInfo, "Text");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OtherInstruction'.", new RecordItemIndex(10));
            Keyboard.Press(OtherInstruction);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

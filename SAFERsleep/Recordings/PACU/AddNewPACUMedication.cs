///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.PACU
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddNewPACUMedication recording.
    /// </summary>
    [TestModule("b3cc7753-b5a3-4003-b2c9-75a6c48902d0", ModuleType.Recording, 1)]
    public partial class AddNewPACUMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddNewPACUMedication instance = new AddNewPACUMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddNewPACUMedication()
        {
            PACUDrug = "Acarbose";
            PACUDose = "10";
            PACUUnit = "mg";
            PACURoute = "PR";
            PACUFrequencyTime = "Once Daily";
            PACUInstruction = "This is PACU Instruction test";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddNewPACUMedication Instance
        {
            get { return instance; }
        }

#region Variables

        string _PACUInstruction;

        /// <summary>
        /// Gets or sets the value of variable PACUInstruction.
        /// </summary>
        [TestVariable("c1c35c79-e080-491b-89ef-c683372306b9")]
        public string PACUInstruction
        {
            get { return _PACUInstruction; }
            set { _PACUInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUDrug.
        /// </summary>
        [TestVariable("5deb7246-dadb-4221-8194-a0df74a08ea5")]
        public string PACUDrug
        {
            get { return repo.PACUDrug; }
            set { repo.PACUDrug = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUDose.
        /// </summary>
        [TestVariable("b70b5587-442a-4c56-aeb6-4a8ba4e32cff")]
        public string PACUDose
        {
            get { return repo.PACUDose; }
            set { repo.PACUDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUUnit.
        /// </summary>
        [TestVariable("ba42c6b1-a22f-4026-b178-4588bd04d738")]
        public string PACUUnit
        {
            get { return repo.PACUUnit; }
            set { repo.PACUUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACURoute.
        /// </summary>
        [TestVariable("a1bbf3b8-c6a6-42c9-9197-ad4304238a39")]
        public string PACURoute
        {
            get { return repo.PACURoute; }
            set { repo.PACURoute = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUFrequencyTime.
        /// </summary>
        [TestVariable("f6c40b82-788c-4573-a444-43484a3f4c7b")]
        public string PACUFrequencyTime
        {
            get { return repo.PACUFrequencyTime; }
            set { repo.PACUFrequencyTime = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.OR_Modules.PACU' at Center.", repo.FrmORMain.OR_Modules.PACUInfo, new RecordItemIndex(0));
            repo.FrmORMain.OR_Modules.PACU.Click();
            Delay.Milliseconds(200);
            
            // 1. Add PACU Medication
            Report.Log(ReportLevel.Info, "Mouse", "1. Add PACU Medication\r\nMouse Left Click item 'FrmORMain.PACUInstructions.AddPACUMedication' at Center.", repo.FrmORMain.PACUInstructions.AddPACUMedicationInfo, new RecordItemIndex(1));
            repo.FrmORMain.PACUInstructions.AddPACUMedication.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddPACUMedication.AddNewMed' at Center.", repo.AddPACUMedication.AddNewMedInfo, new RecordItemIndex(2));
            repo.AddPACUMedication.AddNewMed.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddDrug.NewDrugname' at Center.", repo.AddDrug.NewDrugnameInfo, new RecordItemIndex(3));
            repo.AddDrug.NewDrugname.Click();
            Delay.Milliseconds(200);
            
            // Enter Drug name
            Report.Log(ReportLevel.Info, "Keyboard", "Enter Drug name\r\nKey sequence from variable '$PACUDrug'.", new RecordItemIndex(4));
            Keyboard.Press(PACUDrug);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddDrug.ButtonOK' at Center.", repo.AddDrug.ButtonOKInfo, new RecordItemIndex(6));
            repo.AddDrug.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.DoseInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACUDose'.", new RecordItemIndex(8));
            Keyboard.Press(PACUDose);
            Delay.Milliseconds(100);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.UnitInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACUUnit'.", new RecordItemIndex(10));
            Keyboard.Press(PACUUnit);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.RouteInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACURoute'.", new RecordItemIndex(13));
            Keyboard.Press(PACURoute);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(14));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.FreqTimeInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACUFrequencyTime'.", new RecordItemIndex(16));
            Keyboard.Press(PACUFrequencyTime);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(17));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.InstructionInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACUInstruction'.", new RecordItemIndex(19));
            Keyboard.Press(PACUInstruction);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

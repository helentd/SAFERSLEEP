///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.PACU
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PACU_AllergyCheck recording.
    /// </summary>
    [TestModule("11edda1f-8f0d-474d-8d21-6ef9004f7ed7", ModuleType.Recording, 1)]
    public partial class PACU_AllergyCheck : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static PACU_AllergyCheck instance = new PACU_AllergyCheck();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PACU_AllergyCheck()
        {
            PACUUnit = "mg";
            PACURoute = "PR";
            PACUFrequencyTime = "Once Daily";
            PACUInstruction = "This is PACU Instruction test";
            AlertName = "Opiod";
            AlertType = "Allergy";
            AlertClass = "Class";
            DrugClass = "Drug";
            Medication = "Apixaban";
            PACUDrug = "Acarbose";
            PACUDose = "10";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PACU_AllergyCheck Instance
        {
            get { return instance; }
        }

#region Variables

        string _PACUInstruction;

        /// <summary>
        /// Gets or sets the value of variable PACUInstruction.
        /// </summary>
        [TestVariable("27c6e2ec-fa4d-4d76-b7a7-27ae5d7febb0")]
        public string PACUInstruction
        {
            get { return _PACUInstruction; }
            set { _PACUInstruction = value; }
        }

        string _AlertName;

        /// <summary>
        /// Gets or sets the value of variable AlertName.
        /// </summary>
        [TestVariable("ef505993-8f09-4440-bef5-16e63b86468e")]
        public string AlertName
        {
            get { return _AlertName; }
            set { _AlertName = value; }
        }

        string _AlertClass;

        /// <summary>
        /// Gets or sets the value of variable AlertClass.
        /// </summary>
        [TestVariable("2b1a1a94-0dc2-4efe-95d6-58dd397b33e0")]
        public string AlertClass
        {
            get { return _AlertClass; }
            set { _AlertClass = value; }
        }

        string _DrugClass;

        /// <summary>
        /// Gets or sets the value of variable DrugClass.
        /// </summary>
        [TestVariable("dce9a0e7-bfae-4d98-a37b-cda43f1057c6")]
        public string DrugClass
        {
            get { return _DrugClass; }
            set { _DrugClass = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable WarningMessage.
        /// </summary>
        [TestVariable("8fd852be-fb2f-4129-adb5-4f5d3e90c2f0")]
        public string WarningMessage
        {
            get { return repo.WarningMessage; }
            set { repo.WarningMessage = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUFrequencyTime.
        /// </summary>
        [TestVariable("1d851ba8-3e47-4036-b80b-86c09f969c62")]
        public string PACUFrequencyTime
        {
            get { return repo.PACUFrequencyTime; }
            set { repo.PACUFrequencyTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACURoute.
        /// </summary>
        [TestVariable("2080fea6-f015-4ebc-84ee-110c9373194d")]
        public string PACURoute
        {
            get { return repo.PACURoute; }
            set { repo.PACURoute = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUUnit.
        /// </summary>
        [TestVariable("918ca989-7a8b-4115-ae56-6d0a499298a6")]
        public string PACUUnit
        {
            get { return repo.PACUUnit; }
            set { repo.PACUUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUDose.
        /// </summary>
        [TestVariable("ca90cbe7-21fe-48a9-8a79-9f16ce97be68")]
        public string PACUDose
        {
            get { return repo.PACUDose; }
            set { repo.PACUDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUDrug.
        /// </summary>
        [TestVariable("78e8172e-919c-47b3-aa02-427456118b53")]
        public string PACUDrug
        {
            get { return repo.PACUDrug; }
            set { repo.PACUDrug = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AlertType.
        /// </summary>
        [TestVariable("fa0595f0-a18a-4c5a-908d-09b091ca3757")]
        public string AlertType
        {
            get { return repo.AlertType; }
            set { repo.AlertType = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Medication.
        /// </summary>
        [TestVariable("14ee915b-dd7b-44a7-b1dd-4c75447ee491")]
        public string Medication
        {
            get { return repo.Medication; }
            set { repo.Medication = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // 2. Validate Warning box displays when added Drug is in patient's allergy list
            CheckWarningAllert(AlertName, AlertType, AlertClass, DrugClass);
            Delay.Milliseconds(0);
            
            // Validate OK button is disable
            Report.Log(ReportLevel.Info, "Validation", "Validate OK button is disable\r\nValidating AttributeEqual (Enabled='False') on item 'AddPACUMedication.ButtonOK'.", repo.AddPACUMedication.ButtonOKInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.AddPACUMedication.ButtonOKInfo, "Enabled", "False");
            Delay.Milliseconds(0);
            
            // Click On "Stop Alert" button
            Report.Log(ReportLevel.Info, "Mouse", "Click On \"Stop Alert\" button\r\nMouse Left Click item 'AddPACUMedication.PACU_StopAlerts' at Center.", repo.AddPACUMedication.PACU_StopAlertsInfo, new RecordItemIndex(2));
            repo.AddPACUMedication.PACU_StopAlerts.Click();
            Delay.Milliseconds(200);
            
            // Enter reason for stop alert
            Report.Log(ReportLevel.Info, "Mouse", "Enter reason for stop alert\r\nMouse Left Click item 'StopAlert_ReasonPrescribingDrug.ReasonToPrescribeDrug' at Center.", repo.StopAlert_ReasonPrescribingDrug.ReasonToPrescribeDrugInfo, new RecordItemIndex(3));
            repo.StopAlert_ReasonPrescribingDrug.ReasonToPrescribeDrug.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Stop Alert Reason Test' with focus on 'StopAlert_ReasonPrescribingDrug.ReasonToPrescribeDrug'.", repo.StopAlert_ReasonPrescribingDrug.ReasonToPrescribeDrugInfo, new RecordItemIndex(4));
            repo.StopAlert_ReasonPrescribingDrug.ReasonToPrescribeDrug.PressKeys("Stop Alert Reason Test");
            Delay.Milliseconds(0);
            
            // Click on OK on Stop alert box
            Report.Log(ReportLevel.Info, "Mouse", "Click on OK on Stop alert box\r\nMouse Left Click item 'StopAlert_ReasonPrescribingDrug.ButtonOK' at Center.", repo.StopAlert_ReasonPrescribingDrug.ButtonOKInfo, new RecordItemIndex(5));
            repo.StopAlert_ReasonPrescribingDrug.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Click on OK
            Report.Log(ReportLevel.Info, "Mouse", "Click on OK\r\nMouse Left Click item 'AddPACUMedication.ButtonOK' at Center.", repo.AddPACUMedication.ButtonOKInfo, new RecordItemIndex(6));
            repo.AddPACUMedication.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Verify medication is added successfully
            Report.Log(ReportLevel.Info, "Validation", "Verify medication is added successfully\r\nValidating Exists on item 'FrmORMain.PACUInstructions.AddedPACUMedication'.", repo.FrmORMain.PACUInstructions.AddedPACUMedicationInfo, new RecordItemIndex(7));
            Validate.Exists(repo.FrmORMain.PACUInstructions.AddedPACUMedicationInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.PACU
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddPACUMedication recording.
    /// </summary>
    [TestModule("9de9cd22-5d81-4bb2-b5f3-e14c4a9b99d9", ModuleType.Recording, 1)]
    public partial class AddPACUMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddPACUMedication instance = new AddPACUMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddPACUMedication()
        {
            PACUDrug = "Acarbose";
            PACUDose = "10";
            PACUUnit = "mg";
            PACURoute = "PR";
            PACUFrequencyTime = "Once Daily";
            PACUInstruction = "This is PACU Instruction test";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddPACUMedication Instance
        {
            get { return instance; }
        }

#region Variables

        string _PACUInstruction;

        /// <summary>
        /// Gets or sets the value of variable PACUInstruction.
        /// </summary>
        [TestVariable("6ec68f10-b3e6-4ef4-9fb0-cbc55ca923b0")]
        public string PACUInstruction
        {
            get { return _PACUInstruction; }
            set { _PACUInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUFrequencyTime.
        /// </summary>
        [TestVariable("b4f14694-61b0-45b9-ac6c-e3604e2aa070")]
        public string PACUFrequencyTime
        {
            get { return repo.PACUFrequencyTime; }
            set { repo.PACUFrequencyTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACURoute.
        /// </summary>
        [TestVariable("ba6f8344-a600-420f-8c17-dc5d95fcda51")]
        public string PACURoute
        {
            get { return repo.PACURoute; }
            set { repo.PACURoute = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUUnit.
        /// </summary>
        [TestVariable("e4476bdf-ccfe-45e1-a4bb-0a9889f40a23")]
        public string PACUUnit
        {
            get { return repo.PACUUnit; }
            set { repo.PACUUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUDose.
        /// </summary>
        [TestVariable("392ec7c2-56c7-4d79-87e1-6cfca284b001")]
        public string PACUDose
        {
            get { return repo.PACUDose; }
            set { repo.PACUDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PACUDrug.
        /// </summary>
        [TestVariable("0b8d99ea-596f-41c0-bd0f-0ba461e9d567")]
        public string PACUDrug
        {
            get { return repo.PACUDrug; }
            set { repo.PACUDrug = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // CLick on Add to add medicaiton for PACU
            Report.Log(ReportLevel.Info, "Mouse", "CLick on Add to add medicaiton for PACU\r\nMouse Left Click item 'FrmORMain.PACUInstructions.AddPACUMedication' at Center.", repo.FrmORMain.PACUInstructions.AddPACUMedicationInfo, new RecordItemIndex(0));
            repo.FrmORMain.PACUInstructions.AddPACUMedication.Click();
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.DrugNameInfo, "Combobox");
            
            // Enter Drug name
            Report.Log(ReportLevel.Info, "Keyboard", "Enter Drug name\r\nKey sequence from variable '$PACUDrug'.", new RecordItemIndex(2));
            Keyboard.Press(PACUDrug);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.DoseInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACUDose'.", new RecordItemIndex(5));
            Keyboard.Press(PACUDose);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.UnitInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACUUnit'.", new RecordItemIndex(7));
            Keyboard.Press(PACUUnit);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.RouteInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACURoute'.", new RecordItemIndex(10));
            Keyboard.Press(PACURoute);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.FreqTimeInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACUFrequencyTime'.", new RecordItemIndex(13));
            Keyboard.Press(PACUFrequencyTime);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(14));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddPACUMedication.InstructionInfo, "Text");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PACUInstruction'.", new RecordItemIndex(16));
            Keyboard.Press(PACUInstruction);
            
            // Click on OK
            Report.Log(ReportLevel.Info, "Mouse", "Click on OK\r\nMouse Left Click item 'AddPACUMedication.ButtonOK' at Center.", repo.AddPACUMedication.ButtonOKInfo, new RecordItemIndex(17));
            repo.AddPACUMedication.ButtonOK.Click();
            
            // Verify medication is added successfully
            Report.Log(ReportLevel.Info, "Validation", "Verify medication is added successfully\r\nValidating Exists on item 'FrmORMain.PACUInstructions.AddedPACUMedication'.", repo.FrmORMain.PACUInstructions.AddedPACUMedicationInfo, new RecordItemIndex(18));
            Validate.Exists(repo.FrmORMain.PACUInstructions.AddedPACUMedicationInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

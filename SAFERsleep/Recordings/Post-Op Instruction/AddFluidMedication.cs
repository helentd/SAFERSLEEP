///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Post_Op_Instruction
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddFluidMedication recording.
    /// </summary>
    [TestModule("ba879256-d5ef-4ec2-9167-0d8e90ce7bda", ModuleType.Recording, 1)]
    public partial class AddFluidMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddFluidMedication instance = new AddFluidMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddFluidMedication()
        {
            FluidName = "Autologous RBC";
            FluidVolume = "500";
            FluidRate = "5";
            FluidInstruction = "test instruction";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddFluidMedication Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable FluidInstruction.
        /// </summary>
        [TestVariable("d199135e-006f-4231-b422-eae3a9c6a894")]
        public string FluidInstruction
        {
            get { return repo.FluidInstruction; }
            set { repo.FluidInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidRate.
        /// </summary>
        [TestVariable("5142ea88-6a20-4366-8f19-eda8258a70fe")]
        public string FluidRate
        {
            get { return repo.FluidRate; }
            set { repo.FluidRate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidVolume.
        /// </summary>
        [TestVariable("24d82ee8-e072-45ec-831e-d64d38c6b06c")]
        public string FluidVolume
        {
            get { return repo.FluidVolume; }
            set { repo.FluidVolume = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidName.
        /// </summary>
        [TestVariable("8d56294d-cab2-4d8e-ba55-839a26d25270")]
        public string FluidName
        {
            get { return repo.FluidName; }
            set { repo.FluidName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpInstructions.FluidPrescription' at Center.", repo.FrmORMain.PostOpInstructions.FluidPrescriptionInfo, new RecordItemIndex(0));
            repo.FrmORMain.PostOpInstructions.FluidPrescription.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpInstructions.Fluid.ButtonAdd' at Center.", repo.FrmORMain.PostOpInstructions.Fluid.ButtonAddInfo, new RecordItemIndex(1));
            repo.FrmORMain.PostOpInstructions.Fluid.ButtonAdd.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidPrescription.FluidNameInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FluidName'.", new RecordItemIndex(3));
            Keyboard.Press(FluidName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidPrescription.EditVolumeInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FluidVolume'.", new RecordItemIndex(6));
            Keyboard.Press(FluidVolume);
            Delay.Milliseconds(100);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidPrescription.EditRateInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FluidRate'.", new RecordItemIndex(8));
            Keyboard.Press(FluidRate);
            Delay.Milliseconds(100);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidPrescription.EditInstructionInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FluidInstruction'.", new RecordItemIndex(10));
            Keyboard.Press(FluidInstruction);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddFluidPrescription.ButtonOK' at Center.", repo.AddFluidPrescription.ButtonOKInfo, new RecordItemIndex(11));
            repo.AddFluidPrescription.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.PostOpInstructions.Fluid.FluidListItem'.", repo.FrmORMain.PostOpInstructions.Fluid.FluidListItemInfo, new RecordItemIndex(12));
            Validate.Exists(repo.FrmORMain.PostOpInstructions.Fluid.FluidListItemInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

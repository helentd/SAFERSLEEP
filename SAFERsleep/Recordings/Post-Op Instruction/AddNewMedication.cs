///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Post_Op_Instruction
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddNewMedication recording.
    /// </summary>
    [TestModule("305ae567-84e1-4ad7-b876-b99e45a11f82", ModuleType.Recording, 1)]
    public partial class AddNewMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddNewMedication instance = new AddNewMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddNewMedication()
        {
            PostOpDrug = "Antiemetic";
            PostOpDose = "10";
            PostOpUnit = "mg";
            PostOpRoute = "Topical";
            PostOpFreqTime = "2 hrly";
            PostInstruction = "This is PostOp Instruction test";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddNewMedication Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable PostOpDrug.
        /// </summary>
        [TestVariable("881ed125-a36e-412e-9964-918f6e4babf3")]
        public string PostOpDrug
        {
            get { return repo.PostOpDrug; }
            set { repo.PostOpDrug = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpDose.
        /// </summary>
        [TestVariable("3172db26-16a1-4c8a-a6a5-c46b81f102c1")]
        public string PostOpDose
        {
            get { return repo.PostOpDose; }
            set { repo.PostOpDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpUnit.
        /// </summary>
        [TestVariable("860975c2-6071-49b7-b22f-d8605c6b72e9")]
        public string PostOpUnit
        {
            get { return repo.PostOpUnit; }
            set { repo.PostOpUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpRoute.
        /// </summary>
        [TestVariable("c8d66927-1a6a-4084-a653-f70707478e34")]
        public string PostOpRoute
        {
            get { return repo.PostOpRoute; }
            set { repo.PostOpRoute = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpFreqTime.
        /// </summary>
        [TestVariable("5064fb08-cc62-432e-9d84-a2cbdcb7207f")]
        public string PostOpFreqTime
        {
            get { return repo.PostOpFreqTime; }
            set { repo.PostOpFreqTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostInstruction.
        /// </summary>
        [TestVariable("b091cbf5-3548-4a7d-af9b-00bc1fdab0f5")]
        public string PostInstruction
        {
            get { return repo.PostInstruction; }
            set { repo.PostInstruction = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on "Ward Medication" tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Ward Medication\" tab\r\nMouse Left Click item 'FrmORMain.PostOpInstructions.WardMedication' at Center.", repo.FrmORMain.PostOpInstructions.WardMedicationInfo, new RecordItemIndex(0));
            repo.FrmORMain.PostOpInstructions.WardMedication.Click();
            Delay.Milliseconds(200);
            
            // Click on "Add" button
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Add\" button\r\nMouse Left Click item 'FrmORMain.PostOpInstructions.Ward.ButtonAdd' at Center.", repo.FrmORMain.PostOpInstructions.Ward.ButtonAddInfo, new RecordItemIndex(1));
            repo.FrmORMain.PostOpInstructions.Ward.ButtonAdd.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddWardMedication.ButtonAddNew' at Center.", repo.AddWardMedication.ButtonAddNewInfo, new RecordItemIndex(2));
            repo.AddWardMedication.ButtonAddNew.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddDrug.NewDrugname' at Center.", repo.AddDrug.NewDrugnameInfo, new RecordItemIndex(3));
            repo.AddDrug.NewDrugname.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PostOpDrug'.", new RecordItemIndex(4));
            Keyboard.Press(PostOpDrug);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddDrug.ButtonOK' at Center.", repo.AddDrug.ButtonOKInfo, new RecordItemIndex(6));
            repo.AddDrug.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.DoseInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PostOpDose'.", new RecordItemIndex(8));
            Keyboard.Press(PostOpDose);
            Delay.Milliseconds(100);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.UnitInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PostOpUnit'.", new RecordItemIndex(10));
            Keyboard.Press(PostOpUnit);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.RouteInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PostOpRoute'.", new RecordItemIndex(13));
            Keyboard.Press(PostOpRoute);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(14));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.FreqTimeInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PostOpFreqTime'.", new RecordItemIndex(16));
            Keyboard.Press(PostOpFreqTime);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(17));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.InstructionInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PostInstruction'.", new RecordItemIndex(19));
            Keyboard.Press(PostInstruction);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

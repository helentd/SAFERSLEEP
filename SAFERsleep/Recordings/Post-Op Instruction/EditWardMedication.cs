///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Post_Op_Instruction
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditWardMedication recording.
    /// </summary>
    [TestModule("e58160bb-920e-473b-952c-3f3de4d65206", ModuleType.Recording, 1)]
    public partial class EditWardMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditWardMedication instance = new EditWardMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditWardMedication()
        {
            PostOpDose = "";
            Edit_PostOpDose = "10.1";
            PostOpUnit = "";
            Edit_PostOpUnit = "ml";
            PostOpRoute = "Topical";
            Edit_PostOpRoute = "";
            PostOpFreqTime = "";
            Edit_PostOpFreqTime = "";
            PostInstruction = "This is PostOp Instruction test";
            Edit_PostInstruction = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditWardMedication Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable PostInstruction.
        /// </summary>
        [TestVariable("898e6917-c069-471d-826f-f4fdff87d381")]
        public string PostInstruction
        {
            get { return repo.PostInstruction; }
            set { repo.PostInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpFreqTime.
        /// </summary>
        [TestVariable("361489ef-4ffd-415e-8aa7-2e0740050849")]
        public string PostOpFreqTime
        {
            get { return repo.PostOpFreqTime; }
            set { repo.PostOpFreqTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpRoute.
        /// </summary>
        [TestVariable("d80dc34f-7650-4f28-8796-191e7182d876")]
        public string PostOpRoute
        {
            get { return repo.PostOpRoute; }
            set { repo.PostOpRoute = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpUnit.
        /// </summary>
        [TestVariable("acf1e5c4-3a93-40f0-a352-2a27b79298d3")]
        public string PostOpUnit
        {
            get { return repo.PostOpUnit; }
            set { repo.PostOpUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpDose.
        /// </summary>
        [TestVariable("b681d054-a4dc-4938-963e-b9522fa0357d")]
        public string PostOpDose
        {
            get { return repo.PostOpDose; }
            set { repo.PostOpDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PostOpDrug.
        /// </summary>
        [TestVariable("e9344f95-32d2-46ac-80d9-403c6fb9e229")]
        public string PostOpDrug
        {
            get { return repo.PostOpDrug; }
            set { repo.PostOpDrug = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_PostInstruction.
        /// </summary>
        [TestVariable("3b86ae91-84bf-4605-bc44-07d09dcebe68")]
        public string Edit_PostInstruction
        {
            get { return repo.Edit_PostInstruction; }
            set { repo.Edit_PostInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_PostOpFreqTime.
        /// </summary>
        [TestVariable("e03f36d0-88b2-4466-ba38-cc0f6be0781b")]
        public string Edit_PostOpFreqTime
        {
            get { return repo.Edit_PostOpFreqTime; }
            set { repo.Edit_PostOpFreqTime = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_PostOpRoute.
        /// </summary>
        [TestVariable("32d74f68-55e9-4d28-bc80-9f64f1ca77c6")]
        public string Edit_PostOpRoute
        {
            get { return repo.Edit_PostOpRoute; }
            set { repo.Edit_PostOpRoute = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_PostOpUnit.
        /// </summary>
        [TestVariable("cb2c08f4-ce86-4c77-8cb8-15fb53a58c95")]
        public string Edit_PostOpUnit
        {
            get { return repo.Edit_PostOpUnit; }
            set { repo.Edit_PostOpUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_PostOpDose.
        /// </summary>
        [TestVariable("41eb719a-6a3d-43bd-aab3-47e70bf924ca")]
        public string Edit_PostOpDose
        {
            get { return repo.Edit_PostOpDose; }
            set { repo.Edit_PostOpDose = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_PostOpDrug.
        /// </summary>
        [TestVariable("bb075352-8a52-4fdb-80de-5b4322465b02")]
        public string Edit_PostOpDrug
        {
            get { return repo.Edit_PostOpDrug; }
            set { repo.Edit_PostOpDrug = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Click on "Ward Medication" tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Ward Medication\" tab\r\nMouse Left Click item 'FrmORMain.PostOpInstructions.WardMedication' at Center.", repo.FrmORMain.PostOpInstructions.WardMedicationInfo, new RecordItemIndex(0));
            repo.FrmORMain.PostOpInstructions.WardMedication.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpInstructions.Ward.WardListItem' at Center.", repo.FrmORMain.PostOpInstructions.Ward.WardListItemInfo, new RecordItemIndex(1));
            repo.FrmORMain.PostOpInstructions.Ward.WardListItem.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpInstructions.Ward.ButtonEdit' at Center.", repo.FrmORMain.PostOpInstructions.Ward.ButtonEditInfo, new RecordItemIndex(2));
            repo.FrmORMain.PostOpInstructions.Ward.ButtonEdit.Click();
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.DoseInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_PostOpDose'.", new RecordItemIndex(4));
            Keyboard.Press(Edit_PostOpDose);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.UnitInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_PostOpUnit'.", new RecordItemIndex(6));
            Keyboard.Press(Edit_PostOpUnit);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.RouteInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_PostOpRoute'.", new RecordItemIndex(9));
            Keyboard.Press(Edit_PostOpRoute);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.FreqTimeInfo, "Combobox");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_PostOpFreqTime'.", new RecordItemIndex(12));
            Keyboard.Press(Edit_PostOpFreqTime);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddWardMedication.InstructionInfo, "Text");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_PostInstruction'.", new RecordItemIndex(15));
            Keyboard.Press(Edit_PostInstruction);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddWardMedication.ButtonOK' at Center.", repo.AddWardMedication.ButtonOKInfo, new RecordItemIndex(16));
            repo.AddWardMedication.ButtonOK.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.PostOpInstructions.Ward.EditedWardListItem'.", repo.FrmORMain.PostOpInstructions.Ward.EditedWardListItemInfo, new RecordItemIndex(17));
            Validate.Exists(repo.FrmORMain.PostOpInstructions.Ward.EditedWardListItemInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Post_Op_Instruction
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditFluidMedication recording.
    /// </summary>
    [TestModule("69e9b2cf-2da6-492c-9f55-955bb806e2eb", ModuleType.Recording, 1)]
    public partial class EditFluidMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditFluidMedication instance = new EditFluidMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditFluidMedication()
        {
            FluidName = "Autologous RBC";
            FluidVolume = "500";
            Edit_FluidVolume = "";
            FluidRate = "5";
            Edit_FluidRate = "";
            FluidInstruction = "test instruction";
            Edit_FluidInstruction = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditFluidMedication Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable FluidInstruction.
        /// </summary>
        [TestVariable("6ec28f55-412a-4d98-a958-d1b30ccecd21")]
        public string FluidInstruction
        {
            get { return repo.FluidInstruction; }
            set { repo.FluidInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidRate.
        /// </summary>
        [TestVariable("f438dd07-70ce-4ff2-ab1f-87313b802fbc")]
        public string FluidRate
        {
            get { return repo.FluidRate; }
            set { repo.FluidRate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidVolume.
        /// </summary>
        [TestVariable("ea79c042-41bd-43a7-82f0-cf631466a6dd")]
        public string FluidVolume
        {
            get { return repo.FluidVolume; }
            set { repo.FluidVolume = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidName.
        /// </summary>
        [TestVariable("f8802379-a5c2-4098-a0d6-3cbad52dc7a7")]
        public string FluidName
        {
            get { return repo.FluidName; }
            set { repo.FluidName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_FluidInstruction.
        /// </summary>
        [TestVariable("64790e8e-501c-455a-ac7e-44b79c4b09a9")]
        public string Edit_FluidInstruction
        {
            get { return repo.Edit_FluidInstruction; }
            set { repo.Edit_FluidInstruction = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_FluidRate.
        /// </summary>
        [TestVariable("5299cc48-9d05-4100-b927-c46a28b34f45")]
        public string Edit_FluidRate
        {
            get { return repo.Edit_FluidRate; }
            set { repo.Edit_FluidRate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_FluidVolume.
        /// </summary>
        [TestVariable("0e7f88a4-2a97-463f-a770-458594b810b7")]
        public string Edit_FluidVolume
        {
            get { return repo.Edit_FluidVolume; }
            set { repo.Edit_FluidVolume = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Edit_FluidName.
        /// </summary>
        [TestVariable("519bd8fb-87b1-45d1-8e3a-cd9cc47a9325")]
        public string Edit_FluidName
        {
            get { return repo.Edit_FluidName; }
            set { repo.Edit_FluidName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpInstructions.FluidPrescription' at Center.", repo.FrmORMain.PostOpInstructions.FluidPrescriptionInfo, new RecordItemIndex(0));
            repo.FrmORMain.PostOpInstructions.FluidPrescription.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpInstructions.Fluid.FluidListItem' at Center.", repo.FrmORMain.PostOpInstructions.Fluid.FluidListItemInfo, new RecordItemIndex(1));
            repo.FrmORMain.PostOpInstructions.Fluid.FluidListItem.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.PostOpInstructions.Fluid.ButtonEdit' at Center.", repo.FrmORMain.PostOpInstructions.Fluid.ButtonEditInfo, new RecordItemIndex(2));
            repo.FrmORMain.PostOpInstructions.Fluid.ButtonEdit.Click();
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidPrescription.EditVolumeInfo, "Text");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_FluidVolume'.", new RecordItemIndex(4));
            Keyboard.Press(Edit_FluidVolume);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidPrescription.EditRateInfo, "Text");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_FluidRate'.", new RecordItemIndex(6));
            Keyboard.Press(Edit_FluidRate);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidPrescription.EditInstructionInfo, "Text");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_FluidInstruction'.", new RecordItemIndex(8));
            Keyboard.Press(Edit_FluidInstruction);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddFluidPrescription.ButtonOK' at Center.", repo.AddFluidPrescription.ButtonOKInfo, new RecordItemIndex(9));
            repo.AddFluidPrescription.ButtonOK.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.PostOpInstructions.Fluid.EditedFluidListItem'.", repo.FrmORMain.PostOpInstructions.Fluid.EditedFluidListItemInfo, new RecordItemIndex(10));
            Validate.Exists(repo.FrmORMain.PostOpInstructions.Fluid.EditedFluidListItemInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

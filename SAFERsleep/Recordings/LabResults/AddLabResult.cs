///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.LabResults
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddLabResult recording.
    /// </summary>
    [TestModule("07b7ded7-5169-41dc-a202-5ecd3a24b0ae", ModuleType.Recording, 1)]
    public partial class AddLabResult : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddLabResult instance = new AddLabResult();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddLabResult()
        {
            Hb = "5";
            Hct = "6";
            PH = "7";
            PaO2 = "8";
            FiO2 = "55";
            LabComment = "This is a LabResult comment";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddLabResult Instance
        {
            get { return instance; }
        }

#region Variables

        string _Hct;

        /// <summary>
        /// Gets or sets the value of variable Hct.
        /// </summary>
        [TestVariable("3690ed31-a98b-44cb-b058-de8e76daaf2a")]
        public string Hct
        {
            get { return _Hct; }
            set { _Hct = value; }
        }

        string _PH;

        /// <summary>
        /// Gets or sets the value of variable PH.
        /// </summary>
        [TestVariable("2fc52d4c-10e5-4fe3-88cf-68d734979104")]
        public string PH
        {
            get { return _PH; }
            set { _PH = value; }
        }

        string _PaO2;

        /// <summary>
        /// Gets or sets the value of variable PaO2.
        /// </summary>
        [TestVariable("2363916a-d249-40e9-9e93-e5375958a046")]
        public string PaO2
        {
            get { return _PaO2; }
            set { _PaO2 = value; }
        }

        string _FiO2;

        /// <summary>
        /// Gets or sets the value of variable FiO2.
        /// </summary>
        [TestVariable("cea94853-2d4c-4293-b497-e2f881976f98")]
        public string FiO2
        {
            get { return _FiO2; }
            set { _FiO2 = value; }
        }

        string _LabComment;

        /// <summary>
        /// Gets or sets the value of variable LabComment.
        /// </summary>
        [TestVariable("3c25168c-a48b-4265-9bb4-e94cfd5c3a04")]
        public string LabComment
        {
            get { return _LabComment; }
            set { _LabComment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Hb.
        /// </summary>
        [TestVariable("aed2a022-3e7f-45b6-bd13-09c13ece7646")]
        public string Hb
        {
            get { return repo.Hb; }
            set { repo.Hb = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.LabResults.ButtonAdd' at Center.", repo.FrmORMain.LabResults.ButtonAddInfo, new RecordItemIndex(0));
            repo.FrmORMain.LabResults.ButtonAdd.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddLabResult.HB' at Center.", repo.AddLabResult.HBInfo, new RecordItemIndex(1));
            repo.AddLabResult.HB.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Hb'.", new RecordItemIndex(2));
            Keyboard.Press(Hb);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddLabResult.Hct' at Center.", repo.AddLabResult.HctInfo, new RecordItemIndex(3));
            repo.AddLabResult.Hct.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Hct'.", new RecordItemIndex(4));
            Keyboard.Press(Hct);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddLabResult.FiO2' at Center.", repo.AddLabResult.FiO2Info, new RecordItemIndex(5));
            repo.AddLabResult.FiO2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FiO2'.", new RecordItemIndex(6));
            Keyboard.Press(FiO2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddLabResult.PH' at Center.", repo.AddLabResult.PHInfo, new RecordItemIndex(7));
            repo.AddLabResult.PH.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PH'.", new RecordItemIndex(8));
            Keyboard.Press(PH);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddLabResult.PaO2' at Center.", repo.AddLabResult.PaO2Info, new RecordItemIndex(9));
            repo.AddLabResult.PaO2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PaO2'.", new RecordItemIndex(10));
            Keyboard.Press(PaO2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddLabResult.Comment' at Center.", repo.AddLabResult.CommentInfo, new RecordItemIndex(11));
            repo.AddLabResult.Comment.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LabComment'.", new RecordItemIndex(12));
            Keyboard.Press(LabComment);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddLabResult.ButtonOK' at Center.", repo.AddLabResult.ButtonOKInfo, new RecordItemIndex(13));
            repo.AddLabResult.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Check whether record is added successfully
            Report.Log(ReportLevel.Info, "Validation", "Check whether record is added successfully\r\nValidating Exists on item 'FrmORMain.LabResults.AddedLabResult'.", repo.FrmORMain.LabResults.AddedLabResultInfo, new RecordItemIndex(14));
            Validate.Exists(repo.FrmORMain.LabResults.AddedLabResultInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

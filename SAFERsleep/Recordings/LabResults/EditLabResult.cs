///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.LabResults
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditLabResult recording.
    /// </summary>
    [TestModule("7e0bdb72-70fc-49d1-81f7-7c7870bed2ed", ModuleType.Recording, 1)]
    public partial class EditLabResult : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditLabResult instance = new EditLabResult();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditLabResult()
        {
            EditedHb = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditLabResult Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Hb.
        /// </summary>
        [TestVariable("c8208d16-fc91-48dd-97d4-9d639f0047f3")]
        public string Hb
        {
            get { return repo.Hb; }
            set { repo.Hb = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EditedHb.
        /// </summary>
        [TestVariable("18353df7-79b1-489f-a259-f631ac8ea17c")]
        public string EditedHb
        {
            get { return repo.EditedHb; }
            set { repo.EditedHb = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.LabResults.AddedLabResult' at Center.", repo.FrmORMain.LabResults.AddedLabResultInfo, new RecordItemIndex(0));
            repo.FrmORMain.LabResults.AddedLabResult.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.LabResults.ButtonEdit' at Center.", repo.FrmORMain.LabResults.ButtonEditInfo, new RecordItemIndex(1));
            repo.FrmORMain.LabResults.ButtonEdit.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'AddLabResult.HB' at Center.", repo.AddLabResult.HBInfo, new RecordItemIndex(2));
            repo.AddLabResult.HB.DoubleClick();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EditedHb'.", new RecordItemIndex(3));
            Keyboard.Press(EditedHb);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddLabResult.ButtonOK' at Center.", repo.AddLabResult.ButtonOKInfo, new RecordItemIndex(4));
            repo.AddLabResult.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmORMain.LabResults.EditedLabResult'.", repo.FrmORMain.LabResults.EditedLabResultInfo, new RecordItemIndex(5));
            Validate.Exists(repo.FrmORMain.LabResults.EditedLabResultInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

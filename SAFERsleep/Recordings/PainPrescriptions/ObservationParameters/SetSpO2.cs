///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.PainPrescriptions.ObservationParameters
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetSpO2 recording.
    /// </summary>
    [TestModule("5c502076-46cf-4fb8-a544-71771d4abdf5", ModuleType.Recording, 1)]
    public partial class SetSpO2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static SetSpO2 instance = new SetSpO2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetSpO2()
        {
            SpO2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetSpO2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _SpO2;

        /// <summary>
        /// Gets or sets the value of variable SpO2.
        /// </summary>
        [TestVariable("0a3a3ec8-49a2-43e2-807a-0100ce5b8f10")]
        public string SpO2
        {
            get { return _SpO2; }
            set { _SpO2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollection_OR.Clear_TextBox(repo.FrmORMain.PainPrescriptions.SpO2Info, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SpO2'.", new RecordItemIndex(1));
            Keyboard.Press(SpO2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$SpO2) on item 'FrmORMain.PainPrescriptions.SpO2'.", repo.FrmORMain.PainPrescriptions.SpO2Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmORMain.PainPrescriptions.SpO2Info, "Text", SpO2);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

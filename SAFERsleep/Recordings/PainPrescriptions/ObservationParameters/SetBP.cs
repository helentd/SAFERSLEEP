///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.PainPrescriptions.ObservationParameters
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetBP recording.
    /// </summary>
    [TestModule("c561289a-96fd-45cc-8ef3-ffe04e63df0f", ModuleType.Recording, 1)]
    public partial class SetBP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static SetBP instance = new SetBP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetBP()
        {
            BPLower = "";
            BPUpper = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetBP Instance
        {
            get { return instance; }
        }

#region Variables

        string _BPLower;

        /// <summary>
        /// Gets or sets the value of variable BPLower.
        /// </summary>
        [TestVariable("accf3233-1633-44b1-aa0d-e6589472a043")]
        public string BPLower
        {
            get { return _BPLower; }
            set { _BPLower = value; }
        }

        string _BPUpper;

        /// <summary>
        /// Gets or sets the value of variable BPUpper.
        /// </summary>
        [TestVariable("f0a88289-e781-416c-a9b5-8eadd4f1169d")]
        public string BPUpper
        {
            get { return _BPUpper; }
            set { _BPUpper = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollection_OR.Clear_TextBox(repo.FrmORMain.PainPrescriptions.BPLowerInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$BPLower'.", new RecordItemIndex(1));
            Keyboard.Press(BPLower);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$BPLower) on item 'FrmORMain.PainPrescriptions.BPLower'.", repo.FrmORMain.PainPrescriptions.BPLowerInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmORMain.PainPrescriptions.BPLowerInfo, "Text", BPLower);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.FrmORMain.PainPrescriptions.BPUpperInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$BPUpper'.", new RecordItemIndex(5));
            Keyboard.Press(BPUpper);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$BPUpper) on item 'FrmORMain.PainPrescriptions.BPUpper'.", repo.FrmORMain.PainPrescriptions.BPUpperInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmORMain.PainPrescriptions.BPUpperInfo, "Text", BPUpper);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Patient_Details.VTE
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddNewVTEMedication recording.
    /// </summary>
    [TestModule("abba229a-009f-440a-8e57-50c48fa3291d", ModuleType.Recording, 1)]
    public partial class AddNewVTEMedication : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddNewVTEMedication instance = new AddNewVTEMedication();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddNewVTEMedication()
        {
            Medication = "Apixaban";
            Instruction = "this is a test comment";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddNewVTEMedication Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Medication.
        /// </summary>
        [TestVariable("4f54e3a9-4307-4a55-b20d-45e3d3c3e4df")]
        public string Medication
        {
            get { return repo.Medication; }
            set { repo.Medication = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Instruction.
        /// </summary>
        [TestVariable("0a3a1e2c-e2e8-49ec-9905-1f4226090ec8")]
        public string Instruction
        {
            get { return repo.Instruction; }
            set { repo.Instruction = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.Patient_Details.Tabs.VTETab' at 19;12.", repo.FrmORMain.Patient_Details.Tabs.VTETabInfo, new RecordItemIndex(0));
            repo.FrmORMain.Patient_Details.Tabs.VTETab.Click("19;12");
            
            // 1. Add medication
            Report.Log(ReportLevel.Info, "Mouse", "1. Add medication\r\nMouse Left Click item 'FrmORMain.Patient_Details.VTE.Add' at Center.", repo.FrmORMain.Patient_Details.VTE.AddInfo, new RecordItemIndex(1));
            repo.FrmORMain.Patient_Details.VTE.Add.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditVteMedication.AddNewMed' at Center.", repo.FrmEditVteMedication.AddNewMedInfo, new RecordItemIndex(2));
            repo.FrmEditVteMedication.AddNewMed.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddDrug.NewDrugname' at Center.", repo.AddDrug.NewDrugnameInfo, new RecordItemIndex(3));
            repo.AddDrug.NewDrugname.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Medication'.", new RecordItemIndex(4));
            Keyboard.Press(Medication);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddDrug.ButtonOK' at Center.", repo.AddDrug.ButtonOKInfo, new RecordItemIndex(6));
            repo.AddDrug.ButtonOK.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmEditVteMedication.Instruction' at Center.", repo.FrmEditVteMedication.InstructionInfo, new RecordItemIndex(7));
            repo.FrmEditVteMedication.Instruction.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Instruction'.", new RecordItemIndex(8));
            Keyboard.Press(Instruction);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

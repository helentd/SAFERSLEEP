///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Patient_Details.Medical_Alerts_and_Allergies
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditAllergyAlertedDrug recording.
    /// </summary>
    [TestModule("af25543f-3bb5-4f63-82ba-b6392d2b578b", ModuleType.Recording, 1)]
    public partial class EditAllergyAlertedDrug : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditAllergyAlertedDrug instance = new EditAllergyAlertedDrug();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditAllergyAlertedDrug()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditAllergyAlertedDrug Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable AllergyDetails.
        /// </summary>
        [TestVariable("7f5f4385-d889-461a-9504-94e9728bd5b4")]
        public string AllergyDetails
        {
            get { return repo.AllergyDetails; }
            set { repo.AllergyDetails = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AlertType.
        /// </summary>
        [TestVariable("b0d4a047-e8c1-4b5b-9e27-2fd60cbbb03f")]
        public string AlertType
        {
            get { return repo.AlertType; }
            set { repo.AlertType = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AllergyName.
        /// </summary>
        [TestVariable("0d54d1d0-8b75-4237-806a-ee5e4f42c276")]
        public string AllergyName
        {
            get { return repo.AllergyName; }
            set { repo.AllergyName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DrugName.
        /// </summary>
        [TestVariable("af87d909-460e-47fd-9ea9-861bede9e257")]
        public string DrugName
        {
            get { return repo.DrugName; }
            set { repo.DrugName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on Allergy item
            Report.Log(ReportLevel.Info, "Mouse", "Click on Allergy item\r\nMouse Left DoubleClick item 'FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.AllergyListItemDetail' at Center.", repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.AllergyListItemDetailInfo, new RecordItemIndex(0));
            repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.AllergyListItemDetail.DoubleClick();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EditDrugAllergyCI.DrugAlerted' at Center.", repo.EditDrugAllergyCI.DrugAlertedInfo, new RecordItemIndex(1));
            repo.EditDrugAllergyCI.DrugAlerted.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EditDrugAllergyCI.ButtonOK' at Center.", repo.EditDrugAllergyCI.ButtonOKInfo, new RecordItemIndex(2));
            repo.EditDrugAllergyCI.ButtonOK.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

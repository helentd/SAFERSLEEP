///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Patient_Details.Medical_Alerts_and_Allergies.FunctionalTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditMedicalName recording.
    /// </summary>
    [TestModule("8c25678a-c38f-4da5-a9c9-3c63a12ab203", ModuleType.Recording, 1)]
    public partial class EditMedicalName : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static EditMedicalName instance = new EditMedicalName();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditMedicalName()
        {
            NameToEdit = "Salmon Sperm";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditMedicalName Instance
        {
            get { return instance; }
        }

#region Variables

        string _NameToEdit;

        /// <summary>
        /// Gets or sets the value of variable NameToEdit.
        /// </summary>
        [TestVariable("defcc833-cd66-4467-9d3c-6619786fe1f4")]
        public string NameToEdit
        {
            get { return _NameToEdit; }
            set { _NameToEdit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Details.
        /// </summary>
        [TestVariable("830de232-3401-4495-b11c-44f6cd4633fe")]
        public string Details
        {
            get { return repo.Details; }
            set { repo.Details = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Category.
        /// </summary>
        [TestVariable("86944804-657a-42a5-b8f8-41de2ccbfb7c")]
        public string Category
        {
            get { return repo.Category; }
            set { repo.Category = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.MedicalAlertListItem' at Center.", repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.MedicalAlertListItemInfo, new RecordItemIndex(0));
            repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.MedicalAlertListItem.DoubleClick();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EditMedicalAlert.Category' at Center.", repo.EditMedicalAlert.CategoryInfo, new RecordItemIndex(1));
            repo.EditMedicalAlert.Category.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.EditMedicalAlert.CategoryInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NameToEdit'.", new RecordItemIndex(3));
            Keyboard.Press(NameToEdit);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EditMedicalAlert.ButtonOK' at Center.", repo.EditMedicalAlert.ButtonOKInfo, new RecordItemIndex(5));
            repo.EditMedicalAlert.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Check validate duplicate ame message
            MedicalAlertAllergyCollection.CheckDupplicateDrugLCassConditionName("Condition");
            Delay.Milliseconds(0);
            
            // Click on OK button on Errror poppup
            Report.Log(ReportLevel.Info, "Mouse", "Click on OK button on Errror poppup\r\nMouse Left Click item 'Error.ButtonOK' at Center.", repo.Error.ButtonOKInfo, new RecordItemIndex(7));
            repo.Error.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Click on Cancel on edit medical window
            Report.Log(ReportLevel.Info, "Mouse", "Click on Cancel on edit medical window\r\nMouse Left Click item 'EditMedicalAlert.ButtonCancel' at Center.", repo.EditMedicalAlert.ButtonCancelInfo, new RecordItemIndex(8));
            repo.EditMedicalAlert.ButtonCancel.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

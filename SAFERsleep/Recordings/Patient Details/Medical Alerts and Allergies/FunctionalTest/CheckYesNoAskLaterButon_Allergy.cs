///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Patient_Details.Medical_Alerts_and_Allergies.FunctionalTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CheckYesNoAskLaterButon_Allergy recording.
    /// </summary>
    [TestModule("a9ca8b41-e68c-42ee-b58d-eefd4198aab4", ModuleType.Recording, 1)]
    public partial class CheckYesNoAskLaterButon_Allergy : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static CheckYesNoAskLaterButon_Allergy instance = new CheckYesNoAskLaterButon_Allergy();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CheckYesNoAskLaterButon_Allergy()
        {
            YesButton = "Pressed";
            NoButton = "Hidden";
            AskMeLater = "Hidden";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CheckYesNoAskLaterButon_Allergy Instance
        {
            get { return instance; }
        }

#region Variables

        string _YesButton;

        /// <summary>
        /// Gets or sets the value of variable YesButton.
        /// </summary>
        [TestVariable("a4e74f2a-b0f6-4eec-8fdd-e791bdbe4249")]
        public string YesButton
        {
            get { return _YesButton; }
            set { _YesButton = value; }
        }

        string _NoButton;

        /// <summary>
        /// Gets or sets the value of variable NoButton.
        /// </summary>
        [TestVariable("e6b76769-a2ed-43ec-872e-ce2319564448")]
        public string NoButton
        {
            get { return _NoButton; }
            set { _NoButton = value; }
        }

        string _AskMeLater;

        /// <summary>
        /// Gets or sets the value of variable AskMeLater.
        /// </summary>
        [TestVariable("3af6e850-a3ee-4bea-884c-997f6b4eeb89")]
        public string AskMeLater
        {
            get { return _AskMeLater; }
            set { _AskMeLater = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Check status of yes button
            MedicalAlertAllergyCollection.CheckButtonIsPress(repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.Allergy.ButtonYesInfo, YesButton);
            Delay.Milliseconds(0);
            
            // Check status of No button
            MedicalAlertAllergyCollection.CheckButtonIsPress(repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.Allergy.ButtonNoInfo, NoButton);
            Delay.Milliseconds(0);
            
            // Check status of Ask Me Larer button
            MedicalAlertAllergyCollection.CheckButtonIsPress(repo.FrmORMain.Patient_Details.Medical_Alerts_and_Allergies.Allergy.AskMeLaterInfo, AskMeLater);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Fluids
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddFluidInput recording.
    /// </summary>
    [TestModule("5d00e1c8-7f55-480b-9669-f78c83b7874d", ModuleType.Recording, 1)]
    public partial class AddFluidInput : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddFluidInput instance = new AddFluidInput();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddFluidInput()
        {
            FluidInputName = "Blood";
            StartInputLevel = "100";
            InputUnit = "ml";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddFluidInput Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable InputUnit.
        /// </summary>
        [TestVariable("337c7b8f-1b23-431a-8f03-0c3625f7d9a9")]
        public string InputUnit
        {
            get { return repo.InputUnit; }
            set { repo.InputUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable StartInputLevel.
        /// </summary>
        [TestVariable("1dfa03e6-c163-4961-bafa-4a89422a53f3")]
        public string StartInputLevel
        {
            get { return repo.StartInputLevel; }
            set { repo.StartInputLevel = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidInputName.
        /// </summary>
        [TestVariable("51a674d8-14fa-4053-a86b-51db116fd745")]
        public string FluidInputName
        {
            get { return repo.FluidInputName; }
            set { repo.FluidInputName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.FluidBalance.Tabs.FluidInput' at Center.", repo.FrmORMain.FluidBalance.Tabs.FluidInputInfo, new RecordItemIndex(0));
            repo.FrmORMain.FluidBalance.Tabs.FluidInput.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.FluidBalance.AddFluidInputF5' at Center.", repo.FrmORMain.FluidBalance.AddFluidInputF5Info, new RecordItemIndex(1));
            repo.FrmORMain.FluidBalance.AddFluidInputF5.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidInput.FluidNameInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FluidInputName'.", new RecordItemIndex(3));
            Keyboard.Press(FluidInputName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidInput.StartVolumeInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$StartInputLevel'.", new RecordItemIndex(6));
            Keyboard.Press(StartInputLevel);
            Delay.Milliseconds(100);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidInput.VolumeUnitInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$InputUnit'.", new RecordItemIndex(8));
            Keyboard.Press(InputUnit);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddFluidInput.ButtonOK' at Center.", repo.AddFluidInput.ButtonOKInfo, new RecordItemIndex(10));
            repo.AddFluidInput.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Click on "Finish" button to complete the Fluid input
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Finish\" button to complete the Fluid input\r\nMouse Left Click item 'FrmORMain.FluidBalance.FinishedFluidInput' at Center.", repo.FrmORMain.FluidBalance.FinishedFluidInputInfo, new RecordItemIndex(11));
            repo.FrmORMain.FluidBalance.FinishedFluidInput.Click();
            Delay.Milliseconds(200);
            
            // Validate Fluid is added successfully
            Report.Log(ReportLevel.Info, "Validation", "Validate Fluid is added successfully\r\nValidating Exists on item 'FrmORMain.FluidBalance.AddedFluidInput'.", repo.FrmORMain.FluidBalance.AddedFluidInputInfo, new RecordItemIndex(12));
            Validate.Exists(repo.FrmORMain.FluidBalance.AddedFluidInputInfo);
            Delay.Milliseconds(0);
            
            // Click on Summary tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on Summary tab\r\nMouse Left Click item 'FrmORMain.FluidBalance.Tabs.FluidSummary' at Center.", repo.FrmORMain.FluidBalance.Tabs.FluidSummaryInfo, new RecordItemIndex(13));
            repo.FrmORMain.FluidBalance.Tabs.FluidSummary.Click();
            Delay.Milliseconds(200);
            
            // Validate the  FluidInput  is added succesfully in the Summary tab
            Report.Log(ReportLevel.Info, "Validation", "Validate the  FluidInput  is added succesfully in the Summary tab\r\nValidating Exists on item 'FrmORMain.FluidBalance.FluidInputSummary'.", repo.FrmORMain.FluidBalance.FluidInputSummaryInfo, new RecordItemIndex(14));
            Validate.Exists(repo.FrmORMain.FluidBalance.FluidInputSummaryInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Fluids
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddFluidOutput recording.
    /// </summary>
    [TestModule("e6fc8b50-0e30-4a74-9d31-d006eb3e4c33", ModuleType.Recording, 1)]
    public partial class AddFluidOutput : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static AddFluidOutput instance = new AddFluidOutput();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddFluidOutput()
        {
            FinishVolume = "500";
            FluidOutputName = "Urine";
            OutputStartLevel = "0";
            OutputUnit = "ml";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddFluidOutput Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable OutputUnit.
        /// </summary>
        [TestVariable("707a9f8c-7de9-43a7-a585-f7f414df3410")]
        public string OutputUnit
        {
            get { return repo.OutputUnit; }
            set { repo.OutputUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FinishVolume.
        /// </summary>
        [TestVariable("6f55f88f-e3bc-4881-9d06-6520304da70e")]
        public string FinishVolume
        {
            get { return repo.FinishVolume; }
            set { repo.FinishVolume = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidOutputName.
        /// </summary>
        [TestVariable("a0318cf1-5e3f-414f-8049-bb3bbd0ef4d1")]
        public string FluidOutputName
        {
            get { return repo.FluidOutputName; }
            set { repo.FluidOutputName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable OutputStartLevel.
        /// </summary>
        [TestVariable("19895621-70f3-4512-a39e-b581231541a8")]
        public string OutputStartLevel
        {
            get { return repo.OutputStartLevel; }
            set { repo.OutputStartLevel = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click on "Fluid OutPut" tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"Fluid OutPut\" tab\r\nMouse Left Click item 'FrmORMain.FluidBalance.Tabs.FluidOutput' at Center.", repo.FrmORMain.FluidBalance.Tabs.FluidOutputInfo, new RecordItemIndex(0));
            repo.FrmORMain.FluidBalance.Tabs.FluidOutput.Click();
            Delay.Milliseconds(200);
            
            // Click on "AddFluid OutPut" button
            Report.Log(ReportLevel.Info, "Mouse", "Click on \"AddFluid OutPut\" button\r\nMouse Left Click item 'FrmORMain.FluidBalance.AddFluidOutput' at Center.", repo.FrmORMain.FluidBalance.AddFluidOutputInfo, new RecordItemIndex(1));
            repo.FrmORMain.FluidBalance.AddFluidOutput.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidOutput.FluidOutputNameInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FluidOutputName'.", new RecordItemIndex(3));
            Keyboard.Press(FluidOutputName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidOutput.OutputStartVolumeInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OutputStartLevel'.", new RecordItemIndex(6));
            Keyboard.Press(OutputStartLevel);
            Delay.Milliseconds(100);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidOutput.FinishVolumeInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FinishVolume'.", new RecordItemIndex(8));
            Keyboard.Press(FinishVolume);
            Delay.Milliseconds(0);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidOutput.OutputVolumeUnitInfo, "Combobox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OutputUnit'.", new RecordItemIndex(10));
            Keyboard.Press(OutputUnit);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddFluidOutput.ButtonOK' at Center.", repo.AddFluidOutput.ButtonOKInfo, new RecordItemIndex(12));
            repo.AddFluidOutput.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Validate Fluid is added successfully
            Report.Log(ReportLevel.Info, "Validation", "Validate Fluid is added successfully\r\nValidating Exists on item 'FrmORMain.FluidBalance.AddedFluidOutput'.", repo.FrmORMain.FluidBalance.AddedFluidOutputInfo, new RecordItemIndex(13));
            Validate.Exists(repo.FrmORMain.FluidBalance.AddedFluidOutputInfo);
            Delay.Milliseconds(0);
            
            // Click on Summary tab
            Report.Log(ReportLevel.Info, "Mouse", "Click on Summary tab\r\nMouse Left Click item 'FrmORMain.FluidBalance.Tabs.FluidSummary' at Center.", repo.FrmORMain.FluidBalance.Tabs.FluidSummaryInfo, new RecordItemIndex(14));
            repo.FrmORMain.FluidBalance.Tabs.FluidSummary.Click();
            Delay.Milliseconds(200);
            
            // Validate the  FluidOutput  is added succesfully in the Summary tab
            Report.Log(ReportLevel.Info, "Validation", "Validate the  FluidOutput  is added succesfully in the Summary tab\r\nValidating Exists on item 'FrmORMain.FluidBalance.FluidOutputSummary'.", repo.FrmORMain.FluidBalance.FluidOutputSummaryInfo, new RecordItemIndex(15));
            Validate.Exists(repo.FrmORMain.FluidBalance.FluidOutputSummaryInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

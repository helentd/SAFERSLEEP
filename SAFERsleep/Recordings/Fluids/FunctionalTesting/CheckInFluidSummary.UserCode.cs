///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SAFERsleep.Recordings.Fluids.FunctionalTesting
{
    public partial class CheckInFluidSummary
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void CheckInSummaryTab(string TypeFluid)
        {
        	if (TypeFluid=="Input") 
        	{
        		 // Validate the  FluidInput  is added succesfully in the Summary tab
	            Report.Log(ReportLevel.Info, "Validation", "Validate the  FluidInput  is added succesfully in the Summary tab", repo.FrmORMain.FluidBalance.FluidInputSummaryDetailInfo, new RecordItemIndex(14));
	            Validate.Exists(repo.FrmORMain.FluidBalance.FluidInputSummaryDetailInfo);
	            Delay.Milliseconds(0);
        	}
        	else if (TypeFluid=="Output") 
        	{
        		 // Validate the  FluidOutput  is added succesfully in the Summary tab
	            Report.Log(ReportLevel.Info, "Validation", "Validate the  FluidOutput  is added succesfully in the Summary tab", repo.FrmORMain.FluidBalance.FluidOutputSummaryDetailInfo, new RecordItemIndex(15));
	            Validate.Exists(repo.FrmORMain.FluidBalance.FluidOutputSummaryDetailInfo);
	            Delay.Milliseconds(0);
        	}
			        	
        	
        }

    }
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SAFERsleep.Recordings.Fluids.FunctionalTesting
{
    public partial class ClickOnRepeatButton
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void ResetVolumeGiven()
        {
            // Reassign  VolumeGiven/TotalVolume, TotalRunning, Finishlevel= "" when click on Continue button
            repo.FinishLevel=null;
            repo.VolumeGiven= null;
            repo.RunningTotal= null;            
        }

        public void CheckRepeatedItem()
        {
        	// create a table Fluid from path
            Ranorex.Table tblFluid= "/form[@name='frmMain']/?/?/form[@name='frmFluidBalanceModule']/?/?/tabpage[@name='tsFluidInput']/?/?/table[@class='TcxGridSite']";
           // get the last row of the table
            Ranorex.Row lastRow = tblFluid.Rows[tblFluid.Rows.Count-1];
           // get list cells of this row
            IList<Cell> lstCell=  lastRow.Cells;            	
            
            
             // Validate Finishlevel (cell4), VolumeGiven (cell5), and TotalRunning(cell7) are null
             // in code thesse number should be (number -1)
            Report.Log(ReportLevel.Info, "Validation", "Validate Finishlevel is empty");
             Validate.AreEqual(lstCell[3].GetAttributeValue<string>("Text"),(string)null);            	
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validate VolumeGiven is empty"); 
            Validate.AreEqual(lstCell[4].GetAttributeValue<string>("Text"),(string)null);
            	
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validate TotalRunningl is empty");
            Validate.AreEqual(lstCell[6].GetAttributeValue<string>("Text"),(string)null);
            	
            Delay.Milliseconds(0);
            
            
        }

    }
}

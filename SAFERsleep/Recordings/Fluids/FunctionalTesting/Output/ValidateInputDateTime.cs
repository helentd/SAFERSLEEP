///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep.Recordings.Fluids.FunctionalTesting.Output
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateInputDateTime recording.
    /// </summary>
    [TestModule("374120f5-97a7-47b4-a0ab-02d59276df34", ModuleType.Recording, 1)]
    public partial class ValidateInputDateTime : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep.SAFERsleepORRepository repository.
        /// </summary>
        public static SAFERsleep.SAFERsleepORRepository repo = SAFERsleep.SAFERsleepORRepository.Instance;

        static ValidateInputDateTime instance = new ValidateInputDateTime();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateInputDateTime()
        {
            InValidDate = "1234567890";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateInputDateTime Instance
        {
            get { return instance; }
        }

#region Variables

        string _InValidDate;

        /// <summary>
        /// Gets or sets the value of variable InValidDate.
        /// </summary>
        [TestVariable("be824f72-bb0f-4e2b-8afd-9c1e850b85b3")]
        public string InValidDate
        {
            get { return _InValidDate; }
            set { _InValidDate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable OutputUnit.
        /// </summary>
        [TestVariable("b761e92a-c696-4e2a-8d24-287bc9706f6c")]
        public string OutputUnit
        {
            get { return repo.OutputUnit; }
            set { repo.OutputUnit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FinishVolume.
        /// </summary>
        [TestVariable("5b4920f3-2f12-4fa2-a1e0-2a09f922b53e")]
        public string FinishVolume
        {
            get { return repo.FinishVolume; }
            set { repo.FinishVolume = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FluidOutputName.
        /// </summary>
        [TestVariable("2f23e653-6203-421e-ae39-cf8e4a7eaa0a")]
        public string FluidOutputName
        {
            get { return repo.FluidOutputName; }
            set { repo.FluidOutputName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmORMain.FluidBalance.Tabs.FluidOutput' at Center.", repo.FrmORMain.FluidBalance.Tabs.FluidOutputInfo, new RecordItemIndex(0));
            repo.FrmORMain.FluidBalance.Tabs.FluidOutput.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmORMain.FluidBalance.AddedFluidOutput' at Center.", repo.FrmORMain.FluidBalance.AddedFluidOutputInfo, new RecordItemIndex(1));
            repo.FrmORMain.FluidBalance.AddedFluidOutput.DoubleClick();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidOutput.DateInfo, "Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$InValidDate'.", new RecordItemIndex(3));
            Keyboard.Press(InValidDate);
            Delay.Milliseconds(100);
            
            // CLick OK on Edit window
            Report.Log(ReportLevel.Info, "Mouse", "CLick OK on Edit window\r\nMouse Left Click item 'AddFluidOutput.ButtonOK' at Center.", repo.AddFluidOutput.ButtonOKInfo, new RecordItemIndex(4));
            repo.AddFluidOutput.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            // Validate error message when name is empty
            Report.Log(ReportLevel.Info, "Validation", "Validate error message when name is empty\r\nValidating Exists on item 'Error.InvalidDateError'.", repo.Error.InvalidDateErrorInfo, new RecordItemIndex(5));
            Validate.Exists(repo.Error.InvalidDateErrorInfo);
            Delay.Milliseconds(0);
            
            // Click Ok on error message
            Report.Log(ReportLevel.Info, "Mouse", "Click Ok on error message\r\nMouse Left Click item 'Error.ButtonOK' at Center.", repo.Error.ButtonOKInfo, new RecordItemIndex(6));
            repo.Error.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            UserCodeCollection_OR.Clear_TextBox(repo.AddFluidOutput.DateInfo, "Text");
            Delay.Milliseconds(0);
            
            // Enter today
            UserCodeCollection_OR.EnterDate_Today(repo.AddFluidOutput.DateInfo, "dd/mm/yyyy");
            Delay.Milliseconds(0);
            
            // CLick OK on Edit window
            Report.Log(ReportLevel.Info, "Mouse", "CLick OK on Edit window\r\nMouse Left Click item 'AddFluidOutput.ButtonOK' at Center.", repo.AddFluidOutput.ButtonOKInfo, new RecordItemIndex(9));
            repo.AddFluidOutput.ButtonOK.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

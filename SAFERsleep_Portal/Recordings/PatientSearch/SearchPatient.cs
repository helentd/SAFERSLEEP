///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep_Portal.Recordings.PatientSearch
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SearchPatient recording.
    /// </summary>
    [TestModule("78be645b-a90b-4d73-a295-98b4161653f3", ModuleType.Recording, 1)]
    public partial class SearchPatient : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep_Portal.SAFERsleep_PortalRepository repository.
        /// </summary>
        public static SAFERsleep_Portal.SAFERsleep_PortalRepository repo = SAFERsleep_Portal.SAFERsleep_PortalRepository.Instance;

        static SearchPatient instance = new SearchPatient();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SearchPatient()
        {
            NHISearch = "100007SO";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SearchPatient Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable NHISearch.
        /// </summary>
        [TestVariable("470d7f5f-0886-4d48-b598-dc545a71d704")]
        public string NHISearch
        {
            get { return repo.NHISearch; }
            set { repo.NHISearch = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.SearchPatient.PatientNumber' at Center.", repo.SearchScreen.SearchPatient.PatientNumberInfo, new RecordItemIndex(0));
            repo.SearchScreen.SearchPatient.PatientNumber.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NHISearch'.", new RecordItemIndex(1));
            Keyboard.Press(NHISearch);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.SearchPatient.Searchbutton' at Center.", repo.SearchScreen.SearchPatient.SearchbuttonInfo, new RecordItemIndex(2));
            repo.SearchScreen.SearchPatient.Searchbutton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SearchScreen.SearchPatient.PatientNameReturn'.", repo.SearchScreen.SearchPatient.PatientNameReturnInfo, new RecordItemIndex(3));
            Validate.Exists(repo.SearchScreen.SearchPatient.PatientNameReturnInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.SearchPatient.PatientNameReturn' at Center.", repo.SearchScreen.SearchPatient.PatientNameReturnInfo, new RecordItemIndex(4));
            repo.SearchScreen.SearchPatient.PatientNameReturn.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SearchScreen.SearchPatient.ConfirmPatient'.", repo.SearchScreen.SearchPatient.ConfirmPatientInfo, new RecordItemIndex(5));
            Validate.Exists(repo.SearchScreen.SearchPatient.ConfirmPatientInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.SearchPatient.ConfirmYes' at Center.", repo.SearchScreen.SearchPatient.ConfirmYesInfo, new RecordItemIndex(6));
            repo.SearchScreen.SearchPatient.ConfirmYes.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

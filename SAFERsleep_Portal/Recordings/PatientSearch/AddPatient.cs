///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep_Portal.Recordings.PatientSearch
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddPatient recording.
    /// </summary>
    [TestModule("035f2cfc-3e82-428e-b948-2fc7ff6296ed", ModuleType.Recording, 1)]
    public partial class AddPatient : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep_Portal.SAFERsleep_PortalRepository repository.
        /// </summary>
        public static SAFERsleep_Portal.SAFERsleep_PortalRepository repo = SAFERsleep_Portal.SAFERsleep_PortalRepository.Instance;

        static AddPatient instance = new AddPatient();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddPatient()
        {
            NHI = "";
            DOB = "";
            Sex = "Male";
            FirstName = "";
            LastName = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddPatient Instance
        {
            get { return instance; }
        }

#region Variables

        string _NHI;

        /// <summary>
        /// Gets or sets the value of variable NHI.
        /// </summary>
        [TestVariable("9294ffd4-1687-415f-aab2-bd30e65d15dd")]
        public string NHI
        {
            get { return _NHI; }
            set { _NHI = value; }
        }

        string _DOB;

        /// <summary>
        /// Gets or sets the value of variable DOB.
        /// </summary>
        [TestVariable("141e2c7c-0d87-430b-ad54-adf496bc5ffd")]
        public string DOB
        {
            get { return _DOB; }
            set { _DOB = value; }
        }

        string _Sex;

        /// <summary>
        /// Gets or sets the value of variable Sex.
        /// </summary>
        [TestVariable("98f7849e-5b15-4792-8598-d476306b2284")]
        public string Sex
        {
            get { return _Sex; }
            set { _Sex = value; }
        }

        string _FirstName;

        /// <summary>
        /// Gets or sets the value of variable FirstName.
        /// </summary>
        [TestVariable("6aa759c5-2c6d-4082-b935-e8b4aabebfe6")]
        public string FirstName
        {
            get { return _FirstName; }
            set { _FirstName = value; }
        }

        string _LastName;

        /// <summary>
        /// Gets or sets the value of variable LastName.
        /// </summary>
        [TestVariable("fe8df7ae-746b-44a5-a53a-2ea893fb190b")]
        public string LastName
        {
            get { return _LastName; }
            set { _LastName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.AddPatientDetail.AddPatient' at Center.", repo.SearchScreen.AddPatientDetail.AddPatientInfo, new RecordItemIndex(0));
            repo.SearchScreen.AddPatientDetail.AddPatient.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.AddPatientDetail.PrimaryPatientNumber' at Center.", repo.SearchScreen.AddPatientDetail.PrimaryPatientNumberInfo, new RecordItemIndex(1));
            repo.SearchScreen.AddPatientDetail.PrimaryPatientNumber.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NHI'.", new RecordItemIndex(2));
            Keyboard.Press(NHI);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.AddPatientDetail.LastName' at Center.", repo.SearchScreen.AddPatientDetail.LastNameInfo, new RecordItemIndex(3));
            repo.SearchScreen.AddPatientDetail.LastName.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LastName'.", new RecordItemIndex(4));
            Keyboard.Press(LastName);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.AddPatientDetail.FirstName' at Center.", repo.SearchScreen.AddPatientDetail.FirstNameInfo, new RecordItemIndex(5));
            repo.SearchScreen.AddPatientDetail.FirstName.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FirstName'.", new RecordItemIndex(6));
            Keyboard.Press(FirstName);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.AddPatientDetail.DateOfBirth' at Center.", repo.SearchScreen.AddPatientDetail.DateOfBirthInfo, new RecordItemIndex(7));
            repo.SearchScreen.AddPatientDetail.DateOfBirth.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DOB'.", new RecordItemIndex(8));
            Keyboard.Press(DOB);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.AddPatientDetail.Sex' at Center.", repo.SearchScreen.AddPatientDetail.SexInfo, new RecordItemIndex(9));
            repo.SearchScreen.AddPatientDetail.Sex.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Sex'.", new RecordItemIndex(10));
            Keyboard.Press(Sex);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchScreen.AddPatientDetail.Save' at Center.", repo.SearchScreen.AddPatientDetail.SaveInfo, new RecordItemIndex(12));
            repo.SearchScreen.AddPatientDetail.Save.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

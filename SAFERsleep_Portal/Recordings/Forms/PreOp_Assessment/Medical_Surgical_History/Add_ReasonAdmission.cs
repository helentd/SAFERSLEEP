///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERsleep_Portal.Recordings.Forms.PreOp_Assessment.Medical_Surgical_History
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_ReasonAdmission recording.
    /// </summary>
    [TestModule("1839c396-fabb-4403-a3cb-01bc066d85e4", ModuleType.Recording, 1)]
    public partial class Add_ReasonAdmission : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERsleep_Portal.SAFERsleep_PortalRepository repository.
        /// </summary>
        public static SAFERsleep_Portal.SAFERsleep_PortalRepository repo = SAFERsleep_Portal.SAFERsleep_PortalRepository.Instance;

        static Add_ReasonAdmission instance = new Add_ReasonAdmission();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_ReasonAdmission()
        {
            ReasonforAdmission = "this is just a test";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_ReasonAdmission Instance
        {
            get { return instance; }
        }

#region Variables

        string _ReasonforAdmission;

        /// <summary>
        /// Gets or sets the value of variable ReasonforAdmission.
        /// </summary>
        [TestVariable("b28e4bd3-e7ab-4ac9-a6c6-770a9a69955a")]
        public string ReasonforAdmission
        {
            get { return _ReasonforAdmission; }
            set { _ReasonforAdmission = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Hospital.
        /// </summary>
        [TestVariable("64a0c18a-67c8-4f0d-913d-f8e05fad4b22")]
        public string Hospital
        {
            get { return repo.Hospital; }
            set { repo.Hospital = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.AddRow' at Center.", repo.PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.AddRowInfo, new RecordItemIndex(0));
            repo.PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.AddRow.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.HospitalName_1'.", repo.PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.HospitalName_1Info, new RecordItemIndex(1));
            Validate.Exists(repo.PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.HospitalName_1Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.ReasonforAdmission_1' at Center.", repo.PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.ReasonforAdmission_1Info, new RecordItemIndex(2));
            repo.PreOperativeForm.PreOpAssessment_Form.MedicalSurgicalHistorySection.ReasonforAdmission_1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ReasonforAdmission'.", new RecordItemIndex(3));
            Keyboard.Press(ReasonforAdmission);
            Delay.Milliseconds(100);
            
            Enter_DateofAdmission();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERSleep_AP.Recordings.SavingReview
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SaveThePrintOut recording.
    /// </summary>
    [TestModule("248d61b9-9568-41ba-87ae-dcc0bdd60701", ModuleType.Recording, 1)]
    public partial class SaveThePrintOut : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERSleep_AP.SAFERSleep_APRepository repository.
        /// </summary>
        public static SAFERSleep_AP.SAFERSleep_APRepository repo = SAFERSleep_AP.SAFERSleep_APRepository.Instance;

        static SaveThePrintOut instance = new SaveThePrintOut();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SaveThePrintOut()
        {
            FileName = "PrintOut";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SaveThePrintOut Instance
        {
            get { return instance; }
        }

#region Variables

        string _FileName;

        /// <summary>
        /// Gets or sets the value of variable FileName.
        /// </summary>
        [TestVariable("ea27b8bd-7f87-4daf-a2ca-260a716f5182")]
        public string FileName
        {
            get { return _FileName; }
            set { _FileName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(0));
            Delay.Duration(30000, false);
            
            // Make sure Save as dialogue display
            Report.Log(ReportLevel.Info, "Validation", "Make sure Save as dialogue display\r\nValidating Exists on item 'SaveAs'.", repo.SaveAs.SelfInfo, new RecordItemIndex(1));
            Validate.Exists(repo.SaveAs.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.Filename' at Center.", repo.SaveAs.FilenameInfo, new RecordItemIndex(2));
            repo.SaveAs.Filename.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Shift+Home' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Home | System.Windows.Forms.Keys.Shift, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Back' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Back, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FileName'.", new RecordItemIndex(5));
            Keyboard.Press(FileName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.Save' at Center.", repo.SaveAs.SaveInfo, new RecordItemIndex(6));
            repo.SaveAs.Save.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERSleep_AP.Recordings.PatientPainReview
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PatientPainReviewAnswers recording.
    /// </summary>
    [TestModule("541a60dc-6c7b-4cc2-a0a3-4b9e4436e14d", ModuleType.Recording, 1)]
    public partial class PatientPainReviewAnswers : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERSleep_AP.SAFERSleep_APRepository repository.
        /// </summary>
        public static SAFERSleep_AP.SAFERSleep_APRepository repo = SAFERSleep_AP.SAFERSleep_APRepository.Instance;

        static PatientPainReviewAnswers instance = new PatientPainReviewAnswers();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PatientPainReviewAnswers()
        {
            ReviewQuestion = "Pain Score - at rest:";
            ReviewAnswer = "Yes";
            QuestionType = "YesNo";
            IsAnswer = "Yes";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PatientPainReviewAnswers Instance
        {
            get { return instance; }
        }

#region Variables

        string _QuestionType;

        /// <summary>
        /// Gets or sets the value of variable QuestionType.
        /// </summary>
        [TestVariable("a2042677-f2ea-4b64-bd78-6bd275a0b80c")]
        public string QuestionType
        {
            get { return _QuestionType; }
            set { _QuestionType = value; }
        }

        string _IsAnswer;

        /// <summary>
        /// Gets or sets the value of variable IsAnswer.
        /// </summary>
        [TestVariable("d4768dd5-dd89-4c0e-bf23-98f34e7a1531")]
        public string IsAnswer
        {
            get { return _IsAnswer; }
            set { _IsAnswer = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ReviewQuestion.
        /// </summary>
        [TestVariable("65f5c515-3f4f-4cf1-89eb-796cc06ad500")]
        public string ReviewQuestion
        {
            get { return repo.ReviewQuestion; }
            set { repo.ReviewQuestion = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ReviewAnswer.
        /// </summary>
        [TestVariable("8f4dafff-c12a-45a0-ba1a-31af9a8a9279")]
        public string ReviewAnswer
        {
            get { return repo.ReviewAnswer; }
            set { repo.ReviewAnswer = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            AnswerPainReviewQuestions(ReviewQuestion, ReviewAnswer, QuestionType, IsAnswer);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

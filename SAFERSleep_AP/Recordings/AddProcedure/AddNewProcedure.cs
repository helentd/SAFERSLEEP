///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERSleep_AP.Recordings.AddProcedure
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddNewProcedure recording.
    /// </summary>
    [TestModule("98ded49d-3e51-4a62-bacc-785e80a17f4b", ModuleType.Recording, 1)]
    public partial class AddNewProcedure : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERSleep_AP.SAFERSleep_APRepository repository.
        /// </summary>
        public static SAFERSleep_AP.SAFERSleep_APRepository repo = SAFERSleep_AP.SAFERSleep_APRepository.Instance;

        static AddNewProcedure instance = new AddNewProcedure();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddNewProcedure()
        {
            ProcedureDetails = "Testing Procedure 2";
            IsSurgical = "Yes";
            SurgicalSpecialty = "Gynecology";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddNewProcedure Instance
        {
            get { return instance; }
        }

#region Variables

        string _SurgicalSpecialty;

        /// <summary>
        /// Gets or sets the value of variable SurgicalSpecialty.
        /// </summary>
        [TestVariable("5ce54168-7038-4053-be6f-f75f0b311fe5")]
        public string SurgicalSpecialty
        {
            get { return _SurgicalSpecialty; }
            set { _SurgicalSpecialty = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable IsSurgical.
        /// </summary>
        [TestVariable("81203625-c631-43fd-8b52-60aaa7a7f4db")]
        public string IsSurgical
        {
            get { return repo.IsSurgical; }
            set { repo.IsSurgical = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ProcedureDetails.
        /// </summary>
        [TestVariable("b15bca67-f3fb-4035-a7de-bc6e9bd1ce18")]
        public string ProcedureDetails
        {
            get { return repo.ProcedureDetails; }
            set { repo.ProcedureDetails = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.PainReviewHeader.PatientRibbon.ProcedureLink' at CenterLeft.", repo.MainWindow.PainReviewHeader.PatientRibbon.ProcedureLinkInfo, new RecordItemIndex(0));
            repo.MainWindow.PainReviewHeader.PatientRibbon.ProcedureLink.Click(Location.CenterLeft);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.ProcedureDetails.AddNewProcedure' at Center.", repo.MainWindow.ProcedureDetails.AddNewProcedureInfo, new RecordItemIndex(1));
            repo.MainWindow.ProcedureDetails.AddNewProcedure.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.ProcedureDetails.Last_ProcedureDetails' at Center.", repo.MainWindow.ProcedureDetails.Last_ProcedureDetailsInfo, new RecordItemIndex(2));
            repo.MainWindow.ProcedureDetails.Last_ProcedureDetails.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ProcedureDetails'.", new RecordItemIndex(3));
            Keyboard.Press(ProcedureDetails);
            Delay.Milliseconds(100);
            
            SetIsSurgical(IsSurgical);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.ProcedureDetails.Last_SurgicalSpecialty' at Center.", repo.MainWindow.ProcedureDetails.Last_SurgicalSpecialtyInfo, new RecordItemIndex(5));
            repo.MainWindow.ProcedureDetails.Last_SurgicalSpecialty.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SurgicalSpecialty'.", new RecordItemIndex(6));
            Keyboard.Press(SurgicalSpecialty);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.ProcedureDetails.Save' at Center.", repo.MainWindow.ProcedureDetails.SaveInfo, new RecordItemIndex(8));
            repo.MainWindow.ProcedureDetails.Save.Click();
            Delay.Milliseconds(200);
            
            ValidateNewProcedureDetails(ProcedureDetails);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERSleep_AP.Recordings.ActiveProblems
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddAllergy recording.
    /// </summary>
    [TestModule("f1750468-7597-4da2-b228-077bac8b42ed", ModuleType.Recording, 1)]
    public partial class AddAllergy : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERSleep_AP.SAFERSleep_APRepository repository.
        /// </summary>
        public static SAFERSleep_AP.SAFERSleep_APRepository repo = SAFERSleep_AP.SAFERSleep_APRepository.Instance;

        static AddAllergy instance = new AddAllergy();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddAllergy()
        {
            DrugClass = "Amoxicillin";
            WarningType = "Allergy";
            Detail = "This is a test for Allergy detail";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddAllergy Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Detail.
        /// </summary>
        [TestVariable("24e85803-7179-49a8-9649-166385c4d742")]
        public string Detail
        {
            get { return repo.Detail; }
            set { repo.Detail = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable WarningType.
        /// </summary>
        [TestVariable("bf9c1372-f7e4-45aa-ba5e-95512e16eb87")]
        public string WarningType
        {
            get { return repo.WarningType; }
            set { repo.WarningType = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DrugClass.
        /// </summary>
        [TestVariable("7fd06a28-7e5d-45dd-9d27-39fe376072de")]
        public string DrugClass
        {
            get { return repo.DrugClass; }
            set { repo.DrugClass = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Click on Add Allergy button
            Report.Log(ReportLevel.Info, "Mouse", "Click on Add Allergy button\r\nMouse Left Click item 'MainWindow.ActiveProblems.PopupWindows.Allergies.AddAllergy' at Center.", repo.MainWindow.ActiveProblems.PopupWindows.Allergies.AddAllergyInfo, new RecordItemIndex(0));
            repo.MainWindow.ActiveProblems.PopupWindows.Allergies.AddAllergy.Click();
            
            // Enter Drug Class
            Report.Log(ReportLevel.Info, "Mouse", "Enter Drug Class\r\nMouse Left Click item 'MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.DrugClass' at Center.", repo.MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.DrugClassInfo, new RecordItemIndex(1));
            repo.MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.DrugClass.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DrugClass'.", new RecordItemIndex(2));
            Keyboard.Press(DrugClass);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Enter warning type
            Report.Log(ReportLevel.Info, "Mouse", "Enter warning type\r\nMouse Left Click item 'MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.WarningType' at Center.", repo.MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.WarningTypeInfo, new RecordItemIndex(4));
            repo.MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.WarningType.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$WarningType'.", new RecordItemIndex(5));
            Keyboard.Press(WarningType);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Enter Detail
            Report.Log(ReportLevel.Info, "Mouse", "Enter Detail\r\nMouse Left Click item 'MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.Detail' at Center.", repo.MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.DetailInfo, new RecordItemIndex(7));
            repo.MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.Detail.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Detail'.", new RecordItemIndex(8));
            Keyboard.Press(Detail);
            
            // Click on Save
            Report.Log(ReportLevel.Info, "Mouse", "Click on Save\r\nMouse Left Click item 'MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.Save' at Center.", repo.MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.SaveInfo, new RecordItemIndex(9));
            repo.MainWindow.ActiveProblems.AddAllergyContraindicationAdverseReaction.Save.Click();
            
            // Verify allergy is added successfully
            Report.Log(ReportLevel.Info, "Validation", "Verify allergy is added successfully\r\nValidating Exists on item 'MainWindow.ActiveProblems.PopupWindows.Allergies.AddedAllergy'.", repo.MainWindow.ActiveProblems.PopupWindows.Allergies.AddedAllergyInfo, new RecordItemIndex(10));
            Validate.Exists(repo.MainWindow.ActiveProblems.PopupWindows.Allergies.AddedAllergyInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

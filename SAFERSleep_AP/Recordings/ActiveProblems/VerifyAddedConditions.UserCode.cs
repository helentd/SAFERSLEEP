///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SAFERSleep_AP.Recordings.ActiveProblems
{
    public partial class VerifyAddedConditions
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
// Check all conditions are added successfully and displayed on the list
        public void ValidateConditionExisted(string IsSelected)
        {
        	
        	if (IsSelected=="Yes") // only validate condition are added.
        	{
	        		if (repo.MainWindow.ActiveProblems.Addition_ScrollBarInfo.Exists(3000) == false)
		        	{  // if there is no scroll bar, directly find the expected item		        	
			            Ranorex.Report.Info("Scroll bar does not exist, validate Condition exists.");
			            Validate.Exists(repo.MainWindow.ActiveProblems.ListActiveProblem.ConditionItemInfo);
		        	}
		        	else
		        	{   	
		        			int count=1; // condition to exist while loop
							// Maximum total conditon is 15, scroll bar display when there are more than 7 conditions.
						    // Assume that number of condition is maximum (15) , so need to click (15-7)= 8 time to find expected conditions.
						    
						    count = 1;
						    do  {
						    	if (repo.MainWindow.ActiveProblems.ListActiveProblem.ConditionItemInfo.Exists(2000) == true)
						    	{
						    		Ranorex.Report.Info("Validate Condition exists.");
						    		Validate.Exists(repo.MainWindow.ActiveProblems.ListActiveProblem.ConditionItemInfo);
						    		break;
						    	}
						    	else
						    	{
						    		//Click the down button on scroll bar				    	
						    		repo.MainWindow.ActiveProblems.DownButton.DoubleClick();
						    		Report.Log(ReportLevel.Info,"Click on the down button.");
						    		count++;
						    	}
						    } while (count< 8 );				   
		        	}
        	}
        }

    }
}

///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SAFERSleep_AP.Recordings.ActiveProblems
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddConditions recording.
    /// </summary>
    [TestModule("45ab9e6a-e4a7-4724-80a7-4950ff219dfd", ModuleType.Recording, 1)]
    public partial class AddConditions : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SAFERSleep_AP.SAFERSleep_APRepository repository.
        /// </summary>
        public static SAFERSleep_AP.SAFERSleep_APRepository repo = SAFERSleep_AP.SAFERSleep_APRepository.Instance;

        static AddConditions instance = new AddConditions();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddConditions()
        {
            Condition = "Asthma";
            ConditionDetail = "Detail of Asthma";
            TypeOfDetail = "Text";
            IsSelected = "Yes";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddConditions Instance
        {
            get { return instance; }
        }

#region Variables

        string _TypeOfDetail;

        /// <summary>
        /// Gets or sets the value of variable TypeOfDetail.
        /// </summary>
        [TestVariable("187d4857-ce1d-4bce-8075-6e4d7da599ca")]
        public string TypeOfDetail
        {
            get { return _TypeOfDetail; }
            set { _TypeOfDetail = value; }
        }

        string _IsSelected;

        /// <summary>
        /// Gets or sets the value of variable IsSelected.
        /// </summary>
        [TestVariable("9c80a356-ab68-4649-9b89-b8afca71952f")]
        public string IsSelected
        {
            get { return _IsSelected; }
            set { _IsSelected = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Condition.
        /// </summary>
        [TestVariable("a23b6633-6388-4a66-8ce0-b128340da353")]
        public string Condition
        {
            get { return repo.Condition; }
            set { repo.Condition = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ConditionDetail.
        /// </summary>
        [TestVariable("f8a341cb-3570-4bde-a009-d6a2d68a351c")]
        public string ConditionDetail
        {
            get { return repo.ConditionDetail; }
            set { repo.ConditionDetail = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Select conditions based on test data
            SelectCondition(Condition, ConditionDetail, TypeOfDetail, IsSelected);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
